<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Live2d-moc3格式看板娘使用教程</title>
    <link href="/2023/08/27/Live2d-moc3-kanbangirl-add/"/>
    <url>/2023/08/27/Live2d-moc3-kanbangirl-add/</url>
    
    <content type="html"><![CDATA[<blockquote><p>前面的文章中提到看板娘分为moc格式模型和moc3格式模型，这篇文章主要介绍下moc3模型的看板娘如何加载。前篇文章中介绍了moc模型的看板娘如何加载，适用于大部分模型的加载，但是可能你在网上找到的看板娘模型是moc3格式的，这时候，之前的方法已经不适用了。</p></blockquote><h2 id="前置条件"><a href="#前置条件" class="headerlink" title="前置条件"></a>前置条件</h2><p>在网上查阅了资料发现我们在加载moc3格式模型需要用到如下的js文件：</p><ul><li><strong>pixi.min.js</strong></li><li><strong>live2dcubismcore.min.js</strong></li><li><strong>live2dcubismframework.min.js</strong></li><li><strong>live2dcubismpixi.min.js</strong></li></ul><div class="note note-warning">            <p><strong>TIP</strong></p><p>其中，<strong>live2dcubismcore.min.js</strong>这个js文件是不能从任何一个网站上扒下来的，因为会被官方警告⚠️。</p><p>请从<a href="https://www.live2d.com/en/download/cubism-sdk/"><font color='#3eaf7c'>Live2d官方</font></a>下载Cubism SDK for Web。</p>          </div><p>当我们从网上下载好上面的几个JS文件之后，就可以放到我们的npm上，然后使用CDN加速访问。</p><div class="note note-success">            <p>如果你想了解如何上传JS资源文件到<code>npm</code>，可以查看我的另一篇文章，<a href="/2023/08/20/git-connections-to-remote-github-setting/" title="Git连接远程GitHub配置"><strong>如何上传自己的JS到npm</strong></a> 。</p>          </div><p>当然，如果你不想这么麻烦，也可以选择使用我的：</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs txt">https://cdn.jsdelivr.net/npm/dengy-oos@2.0.0/live2dcubismcore.min.js<br>https://cdn.jsdelivr.net/npm/dengy-oos@2.0.0/pixi.min.js<br>https://cdn.jsdelivr.net/npm/dengy-oos@2.0.0/live2dcubismframework.min.js<br>https://cdn.jsdelivr.net/npm/dengy-oos@2.0.0/live2dcubismpixi.min.js<br></code></pre></td></tr></table></figure><h2 id="GitHub下载模型"><a href="#GitHub下载模型" class="headerlink" title="GitHub下载模型"></a>GitHub下载模型</h2><p>推荐去这里下载，<a href="https://github.com/nuke777/AzurLaneL2DViewer">看板娘模型</a>。</p><h2 id="加载模型"><a href="#加载模型" class="headerlink" title="加载模型"></a>加载模型</h2><p>也可以使用我的CDN链接：</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs txt">https://cdn.jsdelivr.net/npm/dengy-oos@2.0.0/load.min.js<br></code></pre></td></tr></table></figure><h2 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"></span><br><span class="language-css"><span class="hljs-selector-class">.live2d</span> &#123;</span><br><span class="language-css">        <span class="hljs-attribute">position</span>: fixed;</span><br><span class="language-css">        <span class="hljs-attribute">left</span>: -<span class="hljs-number">100px</span>;</span><br><span class="language-css">        <span class="hljs-attribute">bottom</span>: -<span class="hljs-number">20px</span>;</span><br><span class="language-css">        <span class="hljs-attribute">width</span>: <span class="hljs-number">440px</span> <span class="hljs-meta">!important</span>;</span><br><span class="language-css">        <span class="hljs-attribute">height</span>: <span class="hljs-number">397.5px</span> <span class="hljs-meta">!important</span>;</span><br><span class="language-css">        <span class="hljs-attribute">z-index</span>: <span class="hljs-number">998</span>;</span><br><span class="language-css">    &#125;</span><br><span class="language-css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;live2d&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;live2d&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">canvas</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;live2dm&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;live2d&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;z-index: 999!important;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">canvas</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://unpkg.com/dengy-oos@2.0.1/index.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="集成到Fluid"><a href="#集成到Fluid" class="headerlink" title="集成到Fluid"></a>集成到Fluid</h2><h3 id="添加HTML标签"><a href="#添加HTML标签" class="headerlink" title="添加HTML标签"></a>添加HTML标签</h3><p>可以选择在**_config.fluid.yml**下面配置项添加HTML标签</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">footer:</span><br>  <span class="hljs-comment"># 页脚第一行文字的 HTML，建议保留 Fluid 的链接，用于向更多人推广本主题</span><br>  <span class="hljs-comment"># HTML of the first line of the footer, it is recommended to keep the Fluid link to promote this theme to more people</span><br>  <span class="hljs-attr">content:</span> <br>  <span class="hljs-string">&#x27;&lt;div id=&quot;live2d&quot; class=&quot;live2d&quot;&gt;</span><br><span class="hljs-string">      &lt;canvas id=&quot;live2dm&quot; class=&quot;live2d&quot; style=&quot;z-index: 999!important;&quot;&gt;&lt;/canvas&gt;</span><br><span class="hljs-string">    &lt;/div&gt;&#x27;</span><br></code></pre></td></tr></table></figure><p>也可以选择修改Fluid主题module下面的ejs文件。</p><h3 id="添加JS和CSS"><a href="#添加JS和CSS" class="headerlink" title="添加JS和CSS"></a>添加JS和CSS</h3><p>可以在**_config.fluid.yml**自定义CSS和JS的地方加上上面的代码</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># 指定自定义 .js 文件路径，支持列表；路径是相对 source 目录，如 /js/custom.js 对应存放目录 source/js/custom.js</span><br><span class="hljs-comment"># Specify the path of your custom js file, support list. The path is relative to the source directory, such as `/js/custom.js` corresponding to the directory `source/js/custom.js`</span><br><span class="hljs-attr">custom_js:</span> <br>  <span class="hljs-bullet">-</span> <span class="hljs-string">https://unpkg.com/dengy-oos@2.0.1/index.js</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">/cust_js/custom.js</span><br><br><span class="hljs-comment"># 指定自定义 .css 文件路径，用法和 custom_js 相同</span><br><span class="hljs-comment"># The usage is the same as custom_js</span><br><span class="hljs-attr">custom_css:</span> <span class="hljs-string">/cust_css/custom.css</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Hexo</category>
      
      <category>Live2d</category>
      
      <category>Web前端</category>
      
      <category>Live2d</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Web前端</tag>
      
      <tag>Live2d</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>NetWork-域名购买流程</title>
    <link href="/2023/08/24/NetWork-domain-name-purchase/"/>
    <url>/2023/08/24/NetWork-domain-name-purchase/</url>
    
    <content type="html"><![CDATA[<blockquote><p>当我们将博客项目上次GitHub后，却只能使用默认的域名访问，这是无法忍受的，这时我们可以去各大域名提供商购买自己的域名。</p></blockquote><h2 id="选择提供商"><a href="#选择提供商" class="headerlink" title="选择提供商"></a>选择提供商</h2><p>现在市面上域名提供商有阿里云，腾讯云，百度云等，这里我选择的是<a href="https://cloud.baidu.com/"><font color="#3eaf7c">百度云</font></a>。</p><h2 id="查询并购买域名"><a href="#查询并购买域名" class="headerlink" title="查询并购买域名"></a>查询并购买域名</h2><p> 在注册登录之后，到域名服务中搜索自己想要的域名</p><p><img src="/img/page/2023/08/25/website.png"></p><p>之后在提交订单的时候需要选择一个实名信息模板，没有的话需要新建一个，按要求提供相应信息，等待一段时间审核成功之后才可以正常购买域名。</p><h2 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h2><p>随后到控制台，然后选择域名管理界面进行域名的解析：</p><p><img src="/img/page/2023/08/25/website2.png"></p><p>然后点击添加解析：</p><p><img src="/img/page/2023/08/25/website3.png"></p><ul><li><code>主机记录</code>：这里主要填**@<strong>和</strong>www**。@：直接解析当前域名，相当于你域名不会变化；www：会在你域名前面加上www。</li><li><code>记录类型</code>：推荐填写<strong>A记录</strong>和<strong>CNAME记录</strong>。A：记录值需要填写ipv4地址；CNAME：记录值填写另一个域名。</li><li><code>记录值</code>：填写你想让自己域名指向的服务器地址。</li></ul><h2 id="域名备案"><a href="#域名备案" class="headerlink" title="域名备案"></a>域名备案</h2><p>关于域名的备案简单点来说就是如果你的域名指向的是国外的服务器，那么就不需要备案；如果是国内的服务器，那就需要进行备案。下列内容摘自网络：</p><blockquote><p>域名的备案根据你的服务器主机而定，主机在哪就在哪里备案；</p><p>只有中国国内的空间才要求备案，接入商会严格把关的，不备案的网站是绝对不能访问的；</p><p>网站备案主要是看你的网络主机是哪家公司的，就在哪家公司做备案；</p><p>备案与域名注册商无关，与服务器有关，也就是说你的域名可以接入其他任何一家 IDC，但如果你的服务器在万网，那么万网作为服务器接入商，你的备案信息就必须先经过万网的审核后才能递交工信部终审；</p><p>注册 cn 域名做网站并不是一定需要备案的，主要还是看用的是哪时主机。如果用的是国内主机，那么就必须备案，如果用的是国外的空间，那么就不需要备案，直接使用即可。不过需要注意的是，根据 CN 域名管理机构 CNNIC 的规定，cn 域名在注册时需要注册人提交身份证扫描件进行审核，在审核通过后才能正常使用，否则就会注册失败；</p><p>其实是一句话，域名如果绑定指向到国内网站空间就要备案。也就是说如果你这个域名只是纯粹注册下来，用作投资或者暂时不用，是无需备案的。域名指向到国外网站空间，也是无需备案的。但是 CN 域名是特例，CN 域名指向到国外网站空间也要备案，不备案就是暂停解析状态，无法指向到任何 IP。由于域名备案基本取决于网站空间的情况，所以备案也是空间服务商提供备案，不是域名注册商。</p></blockquote><div class="note note-success">            <p>关于Hexo博客部署到GitHub Pages之后，绑定自己域名请看另一篇文章 <a href="/2023/08/20/git-connections-to-remote-github-setting/" title="Git连接远程GitHub配置"><strong>Hexo-4-绑定域名</strong></a></p>          </div>]]></content>
    
    
    <categories>
      
      <category>NetWork</category>
      
    </categories>
    
    
    <tags>
      
      <tag>域名</tag>
      
      <tag>NetWord</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo-3-Fluid主题魔改</title>
    <link href="/2023/08/24/Hexo-3-fluid-mod/"/>
    <url>/2023/08/24/Hexo-3-fluid-mod/</url>
    
    <content type="html"><![CDATA[<blockquote><p>Fluid主题其实已经很好了，但是由于喜欢折腾，还是在网上学习了如何对Fluid进行魔改，本文章记录了如何修改鼠标样式，主页文章缩略图动画，背景动态线条，鼠标滑动特效以及网站标题变化。</p></blockquote><h2 id="前言·准备工作"><a href="#前言·准备工作" class="headerlink" title="前言·准备工作"></a>前言·准备工作</h2><p>Fluid的主题配置文件中有这么两项配置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># 指定自定义 .js 文件路径，支持列表；路径是相对 source 目录，如 /js/custom.js 对应存放目录 source/js/custom.js</span><br><span class="hljs-comment"># Specify the path of your custom js file, support list. The path is relative to the source directory, such as `/js/custom.js` corresponding to the directory `source/js/custom.js`</span><br><span class="hljs-attr">custom_js:</span> <br><br><span class="hljs-comment"># 指定自定义 .css 文件路径，用法和 custom_js 相同</span><br><span class="hljs-comment"># The usage is the same as custom_js</span><br><span class="hljs-attr">custom_css:</span> <br></code></pre></td></tr></table></figure><p>没错，这里就是提供给我们配置自定义 <code>CSS</code> 和 <code>JS</code> 的地方。我们只需要在 <strong>source</strong> 文件夹下创建你自定义的两个文件。例如：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">custom_js:</span> <br>  <span class="hljs-bullet">-</span> <span class="hljs-string">/cust_js/custom.js</span><br>  <br><span class="hljs-attr">custom_css:</span> <span class="hljs-string">/cust_css/custom.css</span><br></code></pre></td></tr></table></figure><p>这个地方可以使用 <code>yaml</code> 的的语法来配置多个文件的路径，可以是<strong>相对路径</strong>也可以是<strong>URL地址</strong>。</p><h2 id="自定义CSS"><a href="#自定义CSS" class="headerlink" title="自定义CSS"></a>自定义CSS</h2><h3 id="修改鼠标样式"><a href="#修改鼠标样式" class="headerlink" title="修改鼠标样式"></a>修改鼠标样式</h3><p>网页中鼠标的样式文件格式为 <code>.cur</code>， 大家可以去网上找一些自己喜欢的鼠标样式来替换下面css中的地址。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">html</span> &#123; <br><span class="hljs-attribute">cursor</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">/img/cursor/Arrow.cur</span>),auto;<span class="hljs-comment">/* url地址可以是链接，相对位置，绝对位置 */</span><br><span class="hljs-attribute">background-color</span>: @theme_background;  <span class="hljs-comment">/* 写成透明就行 */</span><br>&#125;<br><br><span class="hljs-comment">/* 封面大图 */</span><br><span class="hljs-selector-class">.banner</span> &#123;<br><span class="hljs-attribute">cursor</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">/img/cursor/Arrow.cur</span>),auto;<br><span class="hljs-attribute">background-color</span>: @theme_background;<br>&#125;<br><br><span class="hljs-comment">/* 封面向下 */</span><br><span class="hljs-selector-class">.scroll-down-bar</span> &#123;<br><span class="hljs-attribute">cursor</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">/img/cursor/Hand2.cur</span>),auto; <span class="hljs-comment">/* 一个小手 */</span><br><span class="hljs-attribute">background-color</span>: @theme_background;<br>&#125;<br><br><span class="hljs-comment">/* 所有可跳转链接 */</span><br><span class="hljs-selector-tag">a</span><span class="hljs-selector-attr">[href]</span> &#123;<br><span class="hljs-attribute">cursor</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">/img/cursor/Hand2.cur</span>),auto <span class="hljs-meta">!important</span>;<br><span class="hljs-attribute">background-color</span>: @theme_background;<br>&#125;<br><br><span class="hljs-comment">/* 搜索框关闭按钮  */</span><br><span class="hljs-selector-id">#local-search-close</span><span class="hljs-selector-class">.close</span> &#123;<br><span class="hljs-attribute">cursor</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">/img/cursor/Hand2.cur</span>),auto;<br><span class="hljs-attribute">background-color</span>: @theme_background;<br>&#125;<br><br><span class="hljs-comment">/* 搜索框、输入框 */</span><br><span class="hljs-selector-tag">input</span>,<span class="hljs-selector-tag">textarea</span> &#123;<br><span class="hljs-attribute">cursor</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">/img/cursor/IBeam.cur</span>),auto;    <span class="hljs-comment">/* 这里应该是竖条光标 */</span><br><span class="hljs-attribute">background-color</span>: @theme_background;<br>&#125;<br><br><span class="hljs-comment">/* 代码复制键 按钮键增加!important属性后可删 */</span><br><span class="hljs-selector-class">.copy-btn</span><span class="hljs-selector-class">.copy-btn-light</span> &#123;<br><span class="hljs-attribute">cursor</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">/img/cursor/Hand2.cur</span>),auto;<br><span class="hljs-attribute">background-color</span>: @theme_background;<br>&#125;<br><br><span class="hljs-comment">/* 按钮 */</span><br><span class="hljs-selector-tag">button</span><span class="hljs-selector-attr">[class]</span> &#123;<br><span class="hljs-attribute">cursor</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">/img/cursor/Hand2.cur</span>),auto <span class="hljs-meta">!important</span>;<br><span class="hljs-attribute">background-color</span>: @theme_background;<br>&#125;<br><br><span class="hljs-comment">/* 补充按钮 */</span><br>svg &#123;<br><span class="hljs-attribute">cursor</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">/img/cursor/Hand2.cur</span>),auto <span class="hljs-meta">!important</span>;<br><span class="hljs-attribute">background-color</span>: <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0.0</span>);<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="首页文章缩略图"><a href="#首页文章缩略图" class="headerlink" title="首页文章缩略图"></a>首页文章缩略图</h3><p>可以使用下面的类选择器来对首页文章缩略图添加相应的效果，例如下面代码的放大效果。如果你懂前端的<code>CSS</code>，那你随意，可以修改成自己相要的效果。如果是不懂的小白的话，那就使用下面代码就好。</p><blockquote><p><strong>TIP</strong>：其实我也是小白 ,,Ծ‸Ծ,,</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.index-img</span> &#123;<br><span class="hljs-attribute">transition</span>: .<span class="hljs-number">4s</span>;<br>&#125;<br><br><span class="hljs-selector-class">.index-card</span><span class="hljs-selector-pseudo">:hover</span> <span class="hljs-selector-class">.index-img</span> &#123;<br><span class="hljs-attribute">transform</span>: <span class="hljs-built_in">scale</span>(<span class="hljs-number">1.05</span>);<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="自定义JS"><a href="#自定义JS" class="headerlink" title="自定义JS"></a>自定义JS</h2><h3 id="网页标题恶搞"><a href="#网页标题恶搞" class="headerlink" title="网页标题恶搞"></a>网页标题恶搞</h3><p>诺，就像你看到这个页面的标题效果一样，</p><p>当你离开时，它是这样的：</p><p><img src="/img/page/2023/08/24/title1.jpg"></p><p>当你回来时，诶嘿，又变成这样：</p><p><img src="/img/page/2023/08/24/title2.png"></p><p>代码还是挺简单的：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 浏览器搞笑标题</span><br><span class="hljs-keyword">var</span> <span class="hljs-title class_">OriginTitle</span> = <span class="hljs-variable language_">document</span>.<span class="hljs-property">title</span>;<br><span class="hljs-keyword">var</span> titleTime;<br><span class="hljs-variable language_">document</span>.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;visibilitychange&#x27;</span>, <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br><span class="hljs-keyword">if</span> (<span class="hljs-variable language_">document</span>.<span class="hljs-property">hidden</span>) &#123;<br>$(<span class="hljs-string">&#x27;[rel=&quot;icon&quot;]&#x27;</span>).<span class="hljs-title function_">attr</span>(<span class="hljs-string">&#x27;href&#x27;</span>, <span class="hljs-string">&quot;/funny.ico&quot;</span>);<br><span class="hljs-variable language_">document</span>.<span class="hljs-property">title</span> = <span class="hljs-string">&#x27;╭(°A°`)╮ 页面崩溃啦 ~&#x27;</span>;<br><span class="hljs-built_in">clearTimeout</span>(titleTime);<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>$(<span class="hljs-string">&#x27;[rel=&quot;icon&quot;]&#x27;</span>).<span class="hljs-title function_">attr</span>(<span class="hljs-string">&#x27;href&#x27;</span>, <span class="hljs-string">&quot;/img/newtubiao.png&quot;</span>);<br><span class="hljs-variable language_">document</span>.<span class="hljs-property">title</span> = <span class="hljs-string">&#x27;(ฅ&gt;ω&lt;*ฅ) 噫又好啦 ~&#x27;</span> + <span class="hljs-title class_">OriginTitle</span>;<br>titleTime = <span class="hljs-built_in">setTimeout</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br><span class="hljs-variable language_">document</span>.<span class="hljs-property">title</span> = <span class="hljs-title class_">OriginTitle</span>;<br>&#125;, <span class="hljs-number">2000</span>);<br>&#125;<br>&#125;);<br></code></pre></td></tr></table></figure><p>可以根据需求修改显示的内容哦。</p><h3 id="鼠标移动特效"><a href="#鼠标移动特效" class="headerlink" title="鼠标移动特效"></a>鼠标移动特效</h3><p>有没有发现我的博客的鼠标在移动的时候会有一些星星特效⭐️，下面是实现代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 鼠标移动星星特效</span><br>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123; <span class="hljs-keyword">function</span> <span class="hljs-title function_">t</span>(<span class="hljs-params"></span>) &#123; <span class="hljs-title function_">i</span>(), <span class="hljs-title function_">a</span>() &#125;  <span class="hljs-keyword">function</span> <span class="hljs-title function_">i</span>(<span class="hljs-params"></span>) &#123; <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&quot;mousemove&quot;</span>, o), <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&quot;touchmove&quot;</span>, e), <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">addEventListener</span>( <span class="hljs-string">&quot;touchstart&quot;</span>, e), <span class="hljs-variable language_">window</span>.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&quot;resize&quot;</span>, n) &#125;  <span class="hljs-keyword">function</span> <span class="hljs-title function_">n</span>(<span class="hljs-params">t</span>) &#123; d = <span class="hljs-variable language_">window</span>.<span class="hljs-property">innerWidth</span>, <span class="hljs-variable language_">window</span>.<span class="hljs-property">innerHeight</span> &#125;  <span class="hljs-keyword">function</span> <span class="hljs-title function_">e</span>(<span class="hljs-params">t</span>) &#123; <span class="hljs-keyword">if</span> (t.<span class="hljs-property">touches</span>.<span class="hljs-property">length</span> &gt; <span class="hljs-number">0</span>) <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; t.<span class="hljs-property">touches</span>.<span class="hljs-property">length</span>; i++) <span class="hljs-title function_">s</span>(t.<span class="hljs-property">touches</span>[i].<span class="hljs-property">clientX</span>, t.<span class="hljs-property">touches</span>[i].<span class="hljs-property">clientY</span>, r[<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>() * r.<span class="hljs-property">length</span>)]) &#125;  <span class="hljs-keyword">function</span> <span class="hljs-title function_">o</span>(<span class="hljs-params">t</span>) &#123; u.<span class="hljs-property">x</span> = t.<span class="hljs-property">clientX</span>, u.<span class="hljs-property">y</span> = t.<span class="hljs-property">clientY</span>, <span class="hljs-title function_">s</span>(u.<span class="hljs-property">x</span>, u.<span class="hljs-property">y</span>, r[<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>() * r.<span class="hljs-property">length</span>)]) &#125;  <span class="hljs-keyword">function</span> <span class="hljs-title function_">s</span>(<span class="hljs-params">t, i, n</span>) &#123; <span class="hljs-keyword">var</span> e = <span class="hljs-keyword">new</span> l; e.<span class="hljs-title function_">init</span>(t, i, n), f.<span class="hljs-title function_">push</span>(e) &#125;  <span class="hljs-keyword">function</span> <span class="hljs-title function_">h</span>(<span class="hljs-params"></span>) &#123; <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> t = <span class="hljs-number">0</span>; t &lt; f.<span class="hljs-property">length</span>; t++) f[t].<span class="hljs-title function_">update</span>(); <span class="hljs-keyword">for</span> (t = f.<span class="hljs-property">length</span> - <span class="hljs-number">1</span>; t &gt;= <span class="hljs-number">0</span>; t--) f[t].<span class="hljs-property">lifeSpan</span> &lt; <span class="hljs-number">0</span> &amp;&amp; (f[t].<span class="hljs-title function_">die</span>(), f.<span class="hljs-title function_">splice</span>(t, <span class="hljs-number">1</span>)) &#125;  <span class="hljs-keyword">function</span> <span class="hljs-title function_">a</span>(<span class="hljs-params"></span>) &#123; <span class="hljs-title function_">requestAnimationFrame</span>(a), <span class="hljs-title function_">h</span>() &#125;  <span class="hljs-keyword">function</span> <span class="hljs-title function_">l</span>(<span class="hljs-params"></span>) &#123; <span class="hljs-variable language_">this</span>.<span class="hljs-property">character</span> = <span class="hljs-string">&quot;*&quot;</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">lifeSpan</span> = <span class="hljs-number">120</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">initialStyles</span> = &#123; <span class="hljs-attr">position</span>: <span class="hljs-string">&quot;fixed&quot;</span>, <span class="hljs-attr">top</span>: <span class="hljs-string">&quot;0&quot;</span>, <span class="hljs-attr">display</span>: <span class="hljs-string">&quot;block&quot;</span>, <span class="hljs-attr">pointerEvents</span>: <span class="hljs-string">&quot;none&quot;</span>, <span class="hljs-string">&quot;z-index&quot;</span>: <span class="hljs-string">&quot;10000000&quot;</span>, <span class="hljs-attr">fontSize</span>: <span class="hljs-string">&quot;20px&quot;</span>, <span class="hljs-string">&quot;will-change&quot;</span>: <span class="hljs-string">&quot;transform&quot;</span> &#125;, <span class="hljs-variable language_">this</span>.<span class="hljs-property">init</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">t, i, n</span>) &#123; <span class="hljs-variable language_">this</span>.<span class="hljs-property">velocity</span> = &#123; <span class="hljs-attr">x</span>: (<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>() &lt; <span class="hljs-number">.5</span> ? -<span class="hljs-number">1</span> : <span class="hljs-number">1</span>) * (<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>() / <span class="hljs-number">2</span>), <span class="hljs-attr">y</span>: <span class="hljs-number">1</span> &#125;, <span class="hljs-variable language_">this</span>.<span class="hljs-property">position</span> = &#123; <span class="hljs-attr">x</span>: t - <span class="hljs-number">10</span>, <span class="hljs-attr">y</span>: i - <span class="hljs-number">20</span> &#125;, <span class="hljs-variable language_">this</span>.<span class="hljs-property">initialStyles</span>.<span class="hljs-property">color</span> = n, <span class="hljs-variable language_">this</span>.<span class="hljs-property">element</span> = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&quot;span&quot;</span>), <span class="hljs-variable language_">this</span>.<span class="hljs-property">element</span>.<span class="hljs-property">innerHTML</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">character</span>, <span class="hljs-title function_">c</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">element</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">initialStyles</span>), <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">update</span>(), <span class="hljs-variable language_">document</span>.<span class="hljs-property">body</span>.<span class="hljs-title function_">appendChild</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">element</span>) &#125;, <span class="hljs-variable language_">this</span>.<span class="hljs-property">update</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123; <span class="hljs-variable language_">this</span>.<span class="hljs-property">position</span>.<span class="hljs-property">x</span> += <span class="hljs-variable language_">this</span>.<span class="hljs-property">velocity</span>.<span class="hljs-property">x</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">position</span>.<span class="hljs-property">y</span> += <span class="hljs-variable language_">this</span>.<span class="hljs-property">velocity</span>.<span class="hljs-property">y</span>, <span class="hljs-variable language_">this</span>.<span class="hljs-property">lifeSpan</span>--, <span class="hljs-variable language_">this</span>.<span class="hljs-property">element</span>.<span class="hljs-property">style</span>.<span class="hljs-property">transform</span> = <span class="hljs-string">&quot;translate3d(&quot;</span> + <span class="hljs-variable language_">this</span>.<span class="hljs-property">position</span>.<span class="hljs-property">x</span> + <span class="hljs-string">&quot;px,&quot;</span> + <span class="hljs-variable language_">this</span>.<span class="hljs-property">position</span>.<span class="hljs-property">y</span> + <span class="hljs-string">&quot;px,0) scale(&quot;</span> + <span class="hljs-variable language_">this</span>.<span class="hljs-property">lifeSpan</span> / <span class="hljs-number">120</span> + <span class="hljs-string">&quot;)&quot;</span> &#125;, <span class="hljs-variable language_">this</span>.<span class="hljs-property">die</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123; <span class="hljs-variable language_">this</span>.<span class="hljs-property">element</span>.<span class="hljs-property">parentNode</span>.<span class="hljs-title function_">removeChild</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">element</span>) &#125; &#125;  <span class="hljs-keyword">function</span> <span class="hljs-title function_">c</span>(<span class="hljs-params">t, i</span>) &#123; <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> n <span class="hljs-keyword">in</span> i) t.<span class="hljs-property">style</span>[n] = i[n] &#125; <span class="hljs-keyword">var</span> r = [<span class="hljs-string">&quot;#D61C59&quot;</span>, <span class="hljs-string">&quot;#E7D84B&quot;</span>, <span class="hljs-string">&quot;#1B8798&quot;</span>, <span class="hljs-string">&quot;#ffaaff&quot;</span>, <span class="hljs-string">&quot;#aaaaff&quot;</span>], d = <span class="hljs-variable language_">window</span>.<span class="hljs-property">innerWidth</span>, u = (<span class="hljs-variable language_">window</span>.<span class="hljs-property">innerHeight</span>, &#123; <span class="hljs-attr">x</span>: d / <span class="hljs-number">2</span>, <span class="hljs-attr">y</span>: d / <span class="hljs-number">2</span> &#125;), f = []; <span class="hljs-title function_">t</span>() &#125;)();<br></code></pre></td></tr></table></figure><h3 id="网页倒计时"><a href="#网页倒计时" class="headerlink" title="网页倒计时"></a>网页倒计时</h3><p>每个人的个人博客系统都有属于自己的建站时间，我的也不例外，你可以拉到网页底部查看。</p><p><img src="/img/page/2023/08/24/footer.png"></p><p>好了，废话不多说，上代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">var</span> now = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(); <br><span class="hljs-keyword">function</span> <span class="hljs-title function_">createtime</span>(<span class="hljs-params"></span>) &#123; <br>    <span class="hljs-keyword">var</span> grt= <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(<span class="hljs-string">&quot;08/17/2023 00:00:00&quot;</span>);<span class="hljs-comment">//在此处修改你的建站时间，格式：月/日/年 时:分:秒</span><br>    now.<span class="hljs-title function_">setTime</span>(now.<span class="hljs-title function_">getTime</span>()+<span class="hljs-number">250</span>); <br>    days = (now - grt ) / <span class="hljs-number">1000</span> / <span class="hljs-number">60</span> / <span class="hljs-number">60</span> / <span class="hljs-number">24</span>; dnum = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(days); <br>    hours = (now - grt ) / <span class="hljs-number">1000</span> / <span class="hljs-number">60</span> / <span class="hljs-number">60</span> - (<span class="hljs-number">24</span> * dnum); hnum = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(hours); <br>    <span class="hljs-keyword">if</span>(<span class="hljs-title class_">String</span>(hnum).<span class="hljs-property">length</span> ==<span class="hljs-number">1</span> )&#123;hnum = <span class="hljs-string">&quot;0&quot;</span> + hnum;&#125; minutes = (now - grt ) / <span class="hljs-number">1000</span> /<span class="hljs-number">60</span> - (<span class="hljs-number">24</span> * <span class="hljs-number">60</span> * dnum) - (<span class="hljs-number">60</span> * hnum); <br>    mnum = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(minutes); <span class="hljs-keyword">if</span>(<span class="hljs-title class_">String</span>(mnum).<span class="hljs-property">length</span> ==<span class="hljs-number">1</span> )&#123;mnum = <span class="hljs-string">&quot;0&quot;</span> + mnum;&#125; <br>    seconds = (now - grt ) / <span class="hljs-number">1000</span> - (<span class="hljs-number">24</span> * <span class="hljs-number">60</span> * <span class="hljs-number">60</span> * dnum) - (<span class="hljs-number">60</span> * <span class="hljs-number">60</span> * hnum) - (<span class="hljs-number">60</span> * mnum); <br>    snum = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">round</span>(seconds); <span class="hljs-keyword">if</span>(<span class="hljs-title class_">String</span>(snum).<span class="hljs-property">length</span> ==<span class="hljs-number">1</span> )&#123;snum = <span class="hljs-string">&quot;0&quot;</span> + snum;&#125; <br>    <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;timeDate&quot;</span>).<span class="hljs-property">innerHTML</span> = <span class="hljs-string">&quot;🚀本站已夹缝中生存 &quot;</span>+ dnum +<span class="hljs-string">&quot; 天 &quot;</span>; <br>    <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;times&quot;</span>).<span class="hljs-property">innerHTML</span> = hnum + <span class="hljs-string">&quot; 小时 &quot;</span> + mnum + <span class="hljs-string">&quot; 分 &quot;</span> + snum + <span class="hljs-string">&quot; 秒&quot;</span>; <br>&#125; <br><span class="hljs-built_in">setInterval</span>(<span class="hljs-string">&quot;createtime()&quot;</span>,<span class="hljs-number">250</span>);<br></code></pre></td></tr></table></figure><p>可以根据需求修改上面代码的显示文字。</p><p>好了，现在输入 <code>npx hexo s</code> 进行测试，诶，这时你会发现没有效果，然后你就开始怀疑人生了。。。。然后你就开始各种找错，如果你有一些HTML，JS的基础，你应该会马上想到，页面需要显示东西，那就要有对应的HTML元素，但是但是这段JS代码的值却没地方显示，那当然相当于没效果了。</p><p>好了，这时候你就应该去修改Fluid的<strong>配置文件</strong>了，如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">footer:</span><br>  <span class="hljs-comment"># 页脚第一行文字的 HTML，建议保留 Fluid 的链接，用于向更多人推广本主题</span><br>  <span class="hljs-comment"># HTML of the first line of the footer, it is recommended to keep the Fluid link to promote this theme to more people</span><br>  <span class="hljs-attr">content:</span> <span class="hljs-string">&#x27;</span><br><span class="hljs-string">    &lt;a href=&quot;https://hexo.io&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener&quot;&gt;&lt;span&gt;Hexo&lt;/span&gt;&lt;/a&gt;</span><br><span class="hljs-string">    &lt;i class=&quot;iconfont icon-love&quot;&gt;&lt;/i&gt;</span><br><span class="hljs-string">    &lt;a href=&quot;https://github.com/fluid-dev/hexo-theme-fluid&quot; target=&quot;_blank&quot; rel=&quot;nofollow noopener&quot;&gt;&lt;span&gt;Fluid&lt;/span&gt;&lt;/a&gt;</span><br><span class="hljs-string">    &lt;br&gt;&lt;span id=&quot;timeDate&quot;&gt;天数载入中&lt;/span&gt;&lt;span id=&quot;times&quot;&gt;...&lt;/span&gt;&lt;br&gt;</span><br><span class="hljs-string">    &lt;span&gt;遗憾莫过于难忘你的背影，却找不到你来过的痕迹&lt;/span&gt;</span><br><span class="hljs-string">    &lt;p&gt;Copyright © 2023 - &lt;span id=&quot;currentYear&quot;&gt;&lt;/span&gt; All Rights Reserved.&lt;/p&gt;</span><br><span class="hljs-string">  &#x27;</span><br></code></pre></td></tr></table></figure><p>重点是这一段：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs HTML"><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;timeDate&quot;</span>&gt;</span>天数载入中<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;times&quot;</span>&gt;</span>...<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span><br></code></pre></td></tr></table></figure><p>再重新测试，你会发现已经成功了！</p><h3 id="背景特效"><a href="#背景特效" class="headerlink" title="背景特效"></a>背景特效</h3><p>可以让博客系统的背景出现黑色线条，会随机乱动，并且会被鼠标吸引。。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">//背景特效</span><br>!<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">function</span> <span class="hljs-title function_">o</span>(<span class="hljs-params">w,v,i</span>)&#123;<span class="hljs-keyword">return</span> w.<span class="hljs-title function_">getAttribute</span>(v)||i&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">j</span>(<span class="hljs-params">i</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementsByTagName</span>(i)&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">l</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-keyword">var</span> i=<span class="hljs-title function_">j</span>(<span class="hljs-string">&quot;script&quot;</span>),w=i.<span class="hljs-property">length</span>,v=i[w-<span class="hljs-number">1</span>];<span class="hljs-keyword">return</span>&#123;<span class="hljs-attr">l</span>:w,<span class="hljs-attr">z</span>:<span class="hljs-title function_">o</span>(v,<span class="hljs-string">&quot;zIndex&quot;</span>,-<span class="hljs-number">1</span>),<span class="hljs-attr">o</span>:<span class="hljs-title function_">o</span>(v,<span class="hljs-string">&quot;opacity&quot;</span>,<span class="hljs-number">0.5</span>),<span class="hljs-attr">c</span>:<span class="hljs-title function_">o</span>(v,<span class="hljs-string">&quot;color&quot;</span>,<span class="hljs-string">&quot;0,0,0&quot;</span>),<span class="hljs-attr">n</span>:<span class="hljs-title function_">o</span>(v,<span class="hljs-string">&quot;count&quot;</span>,<span class="hljs-number">99</span>)&#125;&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">k</span>(<span class="hljs-params"></span>)&#123;r=u.<span class="hljs-property">width</span>=<span class="hljs-variable language_">window</span>.<span class="hljs-property">innerWidth</span>||<span class="hljs-variable language_">document</span>.<span class="hljs-property">documentElement</span>.<span class="hljs-property">clientWidth</span>||<span class="hljs-variable language_">document</span>.<span class="hljs-property">body</span>.<span class="hljs-property">clientWidth</span>,n=u.<span class="hljs-property">height</span>=<span class="hljs-variable language_">window</span>.<span class="hljs-property">innerHeight</span>||<span class="hljs-variable language_">document</span>.<span class="hljs-property">documentElement</span>.<span class="hljs-property">clientHeight</span>||<span class="hljs-variable language_">document</span>.<span class="hljs-property">body</span>.<span class="hljs-property">clientHeight</span>&#125;<span class="hljs-keyword">function</span> <span class="hljs-title function_">b</span>(<span class="hljs-params"></span>)&#123;e.<span class="hljs-title function_">clearRect</span>(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,r,n);<span class="hljs-keyword">var</span> w=[f].<span class="hljs-title function_">concat</span>(t);<span class="hljs-keyword">var</span> x,v,A,B,z,y;t.<span class="hljs-title function_">forEach</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">i</span>)&#123;i.<span class="hljs-property">x</span>+=i.<span class="hljs-property">xa</span>,i.<span class="hljs-property">y</span>+=i.<span class="hljs-property">ya</span>,i.<span class="hljs-property">xa</span>*=i.<span class="hljs-property">x</span>&gt;r||i.<span class="hljs-property">x</span>&lt;<span class="hljs-number">0</span>?-<span class="hljs-number">1</span>:<span class="hljs-number">1</span>,i.<span class="hljs-property">ya</span>*=i.<span class="hljs-property">y</span>&gt;n||i.<span class="hljs-property">y</span>&lt;<span class="hljs-number">0</span>?-<span class="hljs-number">1</span>:<span class="hljs-number">1</span>,e.<span class="hljs-title function_">fillRect</span>(i.<span class="hljs-property">x</span>-<span class="hljs-number">0.5</span>,i.<span class="hljs-property">y</span>-<span class="hljs-number">0.5</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>);<span class="hljs-keyword">for</span>(v=<span class="hljs-number">0</span>;v&lt;w.<span class="hljs-property">length</span>;v++)&#123;x=w[v];<span class="hljs-keyword">if</span>(i!==x&amp;&amp;<span class="hljs-literal">null</span>!==x.<span class="hljs-property">x</span>&amp;&amp;<span class="hljs-literal">null</span>!==x.<span class="hljs-property">y</span>)&#123;B=i.<span class="hljs-property">x</span>-x.<span class="hljs-property">x</span>,z=i.<span class="hljs-property">y</span>-x.<span class="hljs-property">y</span>,y=B*B+z*z;y&lt;x.<span class="hljs-property">max</span>&amp;&amp;(x===f&amp;&amp;y&gt;=x.<span class="hljs-property">max</span>/<span class="hljs-number">2</span>&amp;&amp;(i.<span class="hljs-property">x</span>-=<span class="hljs-number">0.03</span>*B,i.<span class="hljs-property">y</span>-=<span class="hljs-number">0.03</span>*z),A=(x.<span class="hljs-property">max</span>-y)/x.<span class="hljs-property">max</span>,e.<span class="hljs-title function_">beginPath</span>(),e.<span class="hljs-property">lineWidth</span>=A/<span class="hljs-number">2</span>,e.<span class="hljs-property">strokeStyle</span>=<span class="hljs-string">&quot;rgba(&quot;</span>+s.<span class="hljs-property">c</span>+<span class="hljs-string">&quot;,&quot;</span>+(A+<span class="hljs-number">0.2</span>)+<span class="hljs-string">&quot;)&quot;</span>,e.<span class="hljs-title function_">moveTo</span>(i.<span class="hljs-property">x</span>,i.<span class="hljs-property">y</span>),e.<span class="hljs-title function_">lineTo</span>(x.<span class="hljs-property">x</span>,x.<span class="hljs-property">y</span>),e.<span class="hljs-title function_">stroke</span>())&#125;&#125;w.<span class="hljs-title function_">splice</span>(w.<span class="hljs-title function_">indexOf</span>(i),<span class="hljs-number">1</span>)&#125;),<span class="hljs-title function_">m</span>(b)&#125;<span class="hljs-keyword">var</span> u=<span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&quot;canvas&quot;</span>),s=<span class="hljs-title function_">l</span>(),c=<span class="hljs-string">&quot;c_n&quot;</span>+s.<span class="hljs-property">l</span>,e=u.<span class="hljs-title function_">getContext</span>(<span class="hljs-string">&quot;2d&quot;</span>),r,n,m=<span class="hljs-variable language_">window</span>.<span class="hljs-property">requestAnimationFrame</span>||<span class="hljs-variable language_">window</span>.<span class="hljs-property">webkitRequestAnimationFrame</span>||<span class="hljs-variable language_">window</span>.<span class="hljs-property">mozRequestAnimationFrame</span>||<span class="hljs-variable language_">window</span>.<span class="hljs-property">oRequestAnimationFrame</span>||<span class="hljs-variable language_">window</span>.<span class="hljs-property">msRequestAnimationFrame</span>||<span class="hljs-keyword">function</span>(<span class="hljs-params">i</span>)&#123;<span class="hljs-variable language_">window</span>.<span class="hljs-built_in">setTimeout</span>(i,<span class="hljs-number">1000</span>/<span class="hljs-number">45</span>)&#125;,a=<span class="hljs-title class_">Math</span>.<span class="hljs-property">random</span>,f=&#123;<span class="hljs-attr">x</span>:<span class="hljs-literal">null</span>,<span class="hljs-attr">y</span>:<span class="hljs-literal">null</span>,<span class="hljs-attr">max</span>:<span class="hljs-number">20000</span>&#125;;u.<span class="hljs-property">id</span>=c;u.<span class="hljs-property">style</span>.<span class="hljs-property">cssText</span>=<span class="hljs-string">&quot;position:fixed;top:0;left:0;z-index:&quot;</span>+s.<span class="hljs-property">z</span>+<span class="hljs-string">&quot;;opacity:&quot;</span>+s.<span class="hljs-property">o</span>;<span class="hljs-title function_">j</span>(<span class="hljs-string">&quot;body&quot;</span>)[<span class="hljs-number">0</span>].<span class="hljs-title function_">appendChild</span>(u);<span class="hljs-title function_">k</span>(),<span class="hljs-variable language_">window</span>.<span class="hljs-property">onresize</span>=k;<span class="hljs-variable language_">window</span>.<span class="hljs-property">onmousemove</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params">i</span>)&#123;i=i||<span class="hljs-variable language_">window</span>.<span class="hljs-property">event</span>,f.<span class="hljs-property">x</span>=i.<span class="hljs-property">clientX</span>,f.<span class="hljs-property">y</span>=i.<span class="hljs-property">clientY</span>&#125;,<span class="hljs-variable language_">window</span>.<span class="hljs-property">onmouseout</span>=<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;f.<span class="hljs-property">x</span>=<span class="hljs-literal">null</span>,f.<span class="hljs-property">y</span>=<span class="hljs-literal">null</span>&#125;;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> t=[],p=<span class="hljs-number">0</span>;s.<span class="hljs-property">n</span>&gt;p;p++)&#123;<span class="hljs-keyword">var</span> h=<span class="hljs-title function_">a</span>()*r,g=<span class="hljs-title function_">a</span>()*n,q=<span class="hljs-number">2</span>*<span class="hljs-title function_">a</span>()-<span class="hljs-number">1</span>,d=<span class="hljs-number">2</span>*<span class="hljs-title function_">a</span>()-<span class="hljs-number">1</span>;t.<span class="hljs-title function_">push</span>(&#123;<span class="hljs-attr">x</span>:h,<span class="hljs-attr">y</span>:g,<span class="hljs-attr">xa</span>:q,<span class="hljs-attr">ya</span>:d,<span class="hljs-attr">max</span>:<span class="hljs-number">6000</span>&#125;)&#125;<span class="hljs-built_in">setTimeout</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<span class="hljs-title function_">b</span>()&#125;,<span class="hljs-number">100</span>)&#125;();<br></code></pre></td></tr></table></figure><hr/><div class="note note-success">            <p>持续更新中ʕง•ᴥ•ʔง</p>          </div>]]></content>
    
    
    <categories>
      
      <category>Hexo</category>
      
      <category>Theme</category>
      
      <category>Fluid</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>Fluid</tag>
      
      <tag>Theme</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Live2d-看板娘添加教程</title>
    <link href="/2023/08/21/Live2d-kanbangirl-add/"/>
    <url>/2023/08/21/Live2d-kanbangirl-add/</url>
    
    <content type="html"><![CDATA[<blockquote><p>“看板娘”，简而言之就是小店的女服务生，也有“吸引顾客，招揽生意，提高人气”等作用类似品牌形象代言人的含义。而网页中的看板娘，所用的技术是live2D。live2d并不是一种先进的技术，它产生的效果，都是用基本的平移、旋转、透明、曲面变形等操作实现的。最终的效果与贴图关系很大，而每一个动作，都需要制作师的精细调整。</p></blockquote><h2 id="安装-hexo-helper-live2d"><a href="#安装-hexo-helper-live2d" class="headerlink" title="安装 hexo-helper-live2d"></a>安装 hexo-helper-live2d</h2><div class="note note-success">            <p>官方链接：<a href="https://github.com/EYHN/hexo-helper-live2d/blob/HEAD/README.zh-CN.md"><font color='#3eaf7c'>hexo-helper-live2d官网</font></a></p>          </div><p>cd到 <code>博客目录</code>，然后输入下面命令下载：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">$ npm install --save hexo-helper-live2d<br></code></pre></td></tr></table></figure><h2 id="挑选模型"><a href="#挑选模型" class="headerlink" title="挑选模型"></a>挑选模型</h2><h3 id="chitose"><a href="#chitose" class="headerlink" title="chitose"></a>chitose</h3><p><img src="/img/page/2023/08/21/live2d/chitose.png"></p><h3 id="epsilon2-1"><a href="#epsilon2-1" class="headerlink" title="epsilon2_1"></a>epsilon2_1</h3><p><img src="/img/page/2023/08/21/live2d/epsilon2_1.png"></p><h3 id="gf"><a href="#gf" class="headerlink" title="gf"></a>gf</h3><p><img src="/img/page/2023/08/21/live2d/gf.png"></p><h3 id="haru-01"><a href="#haru-01" class="headerlink" title="haru&#x2F;01"></a>haru&#x2F;01</h3><p><img src="/img/page/2023/08/21/live2d/haru_01.png"></p><h3 id="haru-02"><a href="#haru-02" class="headerlink" title="haru&#x2F;02"></a>haru&#x2F;02</h3><p><img src="/img/page/2023/08/21/live2d/haru_02.png"></p><h3 id="haruto"><a href="#haruto" class="headerlink" title="haruto"></a>haruto</h3><p><img src="/img/page/2023/08/21/live2d/haruto.png"></p><h3 id="hibiki"><a href="#hibiki" class="headerlink" title="hibiki"></a>hibiki</h3><p><img src="/img/page/2023/08/21/live2d/hibiki.png"></p><h3 id="hijiki"><a href="#hijiki" class="headerlink" title="hijiki"></a>hijiki</h3><p><img src="/img/page/2023/08/21/live2d/hijiki.png"></p><h3 id="izumi"><a href="#izumi" class="headerlink" title="izumi"></a>izumi</h3><p><img src="/img/page/2023/08/21/live2d/izumi.png"></p><h3 id="koharu"><a href="#koharu" class="headerlink" title="koharu"></a>koharu</h3><p><img src="/img/page/2023/08/21/live2d/koharu.png"></p><h3 id="miku"><a href="#miku" class="headerlink" title="miku"></a>miku</h3><p><img src="/img/page/2023/08/21/live2d/miku.png"></p><h3 id="nico"><a href="#nico" class="headerlink" title="nico"></a>nico</h3><p><img src="/img/page/2023/08/21/live2d/nico.png"></p><h3 id="nietzsche"><a href="#nietzsche" class="headerlink" title="nietzsche"></a>nietzsche</h3><p><img src="/img/page/2023/08/21/live2d/nietzsche.png"></p><h3 id="ni-j"><a href="#ni-j" class="headerlink" title="ni-j"></a>ni-j</h3><p><img src="/img/page/2023/08/21/live2d/ni-j.png"></p><h3 id="nipsilon"><a href="#nipsilon" class="headerlink" title="nipsilon"></a>nipsilon</h3><p><img src="/img/page/2023/08/21/live2d/nipsilon.png"></p><h3 id="nito"><a href="#nito" class="headerlink" title="nito"></a>nito</h3><p><img src="/img/page/2023/08/21/live2d/nito.png"></p><h3 id="shizuku"><a href="#shizuku" class="headerlink" title="shizuku"></a>shizuku</h3><p><img src="/img/page/2023/08/21/live2d/shizuku.png"></p><h3 id="tororo"><a href="#tororo" class="headerlink" title="tororo"></a>tororo</h3><p><img src="/img/page/2023/08/21/live2d/tororo.png"></p><h3 id="tsumiki"><a href="#tsumiki" class="headerlink" title="tsumiki"></a>tsumiki</h3><p><img src="/img/page/2023/08/21/live2d/tsumiki.png"></p><h3 id="unitychan"><a href="#unitychan" class="headerlink" title="unitychan"></a>unitychan</h3><p><img src="/img/page/2023/08/21/live2d/unitychan.png"></p><h3 id="wanko"><a href="#wanko" class="headerlink" title="wanko"></a>wanko</h3><p><img src="/img/page/2023/08/21/live2d/wanko.png"></p><h3 id="z16"><a href="#z16" class="headerlink" title="z16"></a>z16</h3><p><img src="/img/page/2023/08/21/live2d/z16.png"></p><h2 id="模型下载"><a href="#模型下载" class="headerlink" title="模型下载"></a>模型下载</h2><h3 id="命令行下载"><a href="#命令行下载" class="headerlink" title="命令行下载"></a>命令行下载</h3><p>选好上面模型之后记下名字，依然在 <code>博客目录</code> 下输入下面命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">$ npm install --save live2d-widget-model-模型名字<br></code></pre></td></tr></table></figure><p>此时 <code>博客目录</code>\node_modules\目录下会出现你刚才下载的模块。</p><h3 id="github下载"><a href="#github下载" class="headerlink" title="github下载"></a>github下载</h3><blockquote><p>除了命令行下载之外，还可以去github找各种各样的模型，推荐<a href="https://github.com/summerscar/live2dDemo"><font color='#3eaf7c'>这里</font></a>。</p></blockquote><p>从GitHub上下载下来模型的文件夹之后可以按照下面的方法使用模型：</p><ol><li>在您博客根目录下创建一个 <code>live2d_models</code> 文件夹.</li><li>在此文件夹内新建一个子文件夹.</li><li>将你的 Live2D 模型复制到这个子文件夹中.</li><li>将子文件夹的名称输入 <code>_config.yml</code> 的 <code>model.use</code> 中.</li></ol><p><strong>更详细的使用方法请访问</strong> <a href="https://github.com/EYHN/hexo-helper-live2d/blob/HEAD/README.zh-CN.md"><font color='#3eaf7c'>hexo-helper-live2d官网</font></a></p><div class="note note-warning">            <p><strong>TIP</strong></p><p>下载的模型需要区分是moc格式的，还是moc3格式的。moc3格式的模型请看这篇文章 <a href="/2023/08/27/Live2d-moc3-kanbangirl-add/" title="Live2d-moc3格式看板娘使用教程"><strong>Live2d-moc3格式看板娘使用教程</strong></a></p>          </div><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>当我们做好上述步骤之后，就需要到 <code>_config.yml</code> 中进行配置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># Live2D</span><br><span class="hljs-comment">## https://github.com/EYHN/hexo-helper-live2d</span><br><span class="hljs-attr">live2d:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-comment"># enable: false</span><br>  <span class="hljs-attr">scriptFrom:</span> <span class="hljs-string">local</span> <span class="hljs-comment"># 默认</span><br>  <span class="hljs-attr">pluginRootPath:</span> <span class="hljs-string">live2dw/</span> <span class="hljs-comment"># 插件在站点上的根目录(相对路径)</span><br>  <span class="hljs-attr">pluginJsPath:</span> <span class="hljs-string">lib/</span> <span class="hljs-comment"># 脚本文件相对与插件根目录路径</span><br>  <span class="hljs-attr">pluginModelPath:</span> <span class="hljs-string">assets/</span> <span class="hljs-comment"># 模型文件相对与插件根目录路径</span><br>  <span class="hljs-comment"># scriptFrom: jsdelivr # jsdelivr CDN</span><br>  <span class="hljs-comment"># scriptFrom: unpkg # unpkg CDN</span><br>  <span class="hljs-comment"># scriptFrom: https://cdn.jsdelivr.net/npm/live2d-widget@3.x/lib/L2Dwidget.min.js # 你的自定义 url</span><br>  <span class="hljs-attr">tagMode:</span> <span class="hljs-literal">false</span> <span class="hljs-comment"># 标签模式, 是否仅替换 live2d tag标签而非插入到所有页面中</span><br>  <span class="hljs-attr">debug:</span> <span class="hljs-literal">false</span> <span class="hljs-comment"># 调试, 是否在控制台输出日志</span><br>  <span class="hljs-attr">model:</span><br>    <span class="hljs-attr">use:</span> <span class="hljs-string">lafei_4</span> <span class="hljs-comment"># npm-module package name</span><br>  <span class="hljs-comment"># use: wanko # 博客根目录/live2d_models/ 下的目录名</span><br>  <span class="hljs-comment"># use: ./wives/wanko # 相对于博客根目录的路径</span><br>  <span class="hljs-comment"># use: https://cdn.jsdelivr.net/npm/live2d-widget-model-wanko@1.0.5/assets/wanko.model.json # 你的自定义 url</span><br>    <span class="hljs-attr">scale:</span> <span class="hljs-number">1</span><br>    <span class="hljs-attr">hHeadPos:</span> <span class="hljs-number">0.5</span><br>    <span class="hljs-attr">vHeadPos:</span> <span class="hljs-number">0.618</span><br>  <span class="hljs-attr">display:</span><br>    <span class="hljs-attr">superSample:</span> <span class="hljs-number">2</span><br>    <span class="hljs-attr">width:</span> <span class="hljs-number">150</span><br>    <span class="hljs-attr">height:</span> <span class="hljs-number">300</span><br>    <span class="hljs-attr">position:</span> <span class="hljs-string">left</span><br>    <span class="hljs-attr">hOffset:</span> <span class="hljs-number">0</span><br>    <span class="hljs-attr">vOffset:</span> <span class="hljs-number">-20</span><br>  <span class="hljs-attr">mobile:</span><br>    <span class="hljs-attr">show:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">scale:</span> <span class="hljs-number">0.5</span><br>  <span class="hljs-attr">react:</span><br>    <span class="hljs-attr">opacityDefault:</span> <span class="hljs-number">0.7</span><br>    <span class="hljs-attr">opacityOnHover:</span> <span class="hljs-number">0.2</span><br></code></pre></td></tr></table></figure><h2 id="haru"><a href="#haru" class="headerlink" title="haru"></a>haru</h2><p>haru 和其他模型有些不同，haru包中包含 01 &#x2F; 02 两个模型，在使用时模型名字为：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">model:</span><br>  <span class="hljs-attr">use:</span> <span class="hljs-string">live2d-widget-model-haru/01</span><br></code></pre></td></tr></table></figure><p>或</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">model:</span><br>  <span class="hljs-attr">use:</span> <span class="hljs-string">live2d-widget-model-haru/02</span><br></code></pre></td></tr></table></figure><div class="note note-warning">            <p>此时模型仍然无法正确加载，因为<code>hexo根目录</code>&#x2F;node_modules&#x2F;live2d-widget-model-haru&#x2F;01&#x2F;或02&#x2F; 中的json文件是空的，所以需要把<code>hexo根目录</code>&#x2F;node_modules&#x2F;live2d-widget-model-haru&#x2F;中的json文件复制到01&#x2F;或02&#x2F;文件夹中。</p>          </div><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">$ npx hexo clean<br>$ npx hexo s<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Hexo</category>
      
      <category>Live2d</category>
      
      <category>Web前端</category>
      
      <category>Live2d</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Web前端</tag>
      
      <tag>Live2d</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Waline-1-在个人博客中配置Waline评论插件</title>
    <link href="/2023/08/20/Waline-1-config-waline-in-blog/"/>
    <url>/2023/08/20/Waline-1-config-waline-in-blog/</url>
    
    <content type="html"><![CDATA[<blockquote><p>Waline是一款基于Valine衍生的简洁、安全的评论系统，本文主要记录如何在自己的博客系统中引入改评论插件。</p></blockquote><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Waline 是一款基于 Valine 衍生的简洁、安全的评论系统。</p><ul><li>官网链接：<a href="https://waline.js.org/">https://waline.js.org/</a></li><li>相对于 Valine 有一些后天的优势：</li></ul><table><thead><tr><th>优势</th><th>描述</th></tr></thead><tbody><tr><td>自由评论</td><td>完全的 Markdown 支持，同时包含表情、数学公式、HTML 嵌入</td></tr><tr><td>轻量</td><td>54kB gzip 的完整客户端大小</td></tr><tr><td>强大的安全性</td><td>内容校验、防灌水、保护敏感数据等</td></tr><tr><td>登录支持</td><td>在允许匿名评论的基础上，支持账号注册，保持身份</td></tr><tr><td>完全免费部署</td><td>可免费部署在 Vercel 上</td></tr><tr><td>易于部署</td><td>多种部署部署方式和存储服务支持</td></tr></tbody></table><h2 id="LeanCloud-设置-数据库"><a href="#LeanCloud-设置-数据库" class="headerlink" title="LeanCloud 设置 (数据库)"></a>LeanCloud 设置 (数据库)</h2><ol><li><a href="https://console.leancloud.app/login">登录</a> 或 <a href="https://console.leancloud.app/register">注册</a> <code>LeanCloud 国际版</code> 并进入 <a href="https://console.leancloud.app/apps">控制台</a></li><li>点击左上角 <a href="https://console.leancloud.app/apps">创建应用</a> 并起一个你喜欢的名字 (请选择免费的开发版):</li></ol><p><img src="/img/page/2023/08/20/leancloud-1.png"></p><ol start="3"><li>进入应用，选择左下角的 <code>设置</code> &gt; <code>应用 Key</code>。你可以看到你的 <code>APP ID</code>,<code>APP Key</code> 和 <code>Master Key</code>。请记录它们，以便后续使用。</li></ol><p><img src="/img/page/2023/08/20/leancloud-2.png"></p><div class="note note-warning">            <p><strong>国内版需要完成备案接入</strong></p><p>如果你正在使用 Leancloud 国内版 (<a href="https://leancloud.cn/">leancloud.cnopen in new window</a>)，我们推荐你切换到国际版 (<a href="https://leancloud.app/">leancloud.appopen in new window</a>)。否则，你需要为应用额外绑定<strong>已备案</strong>的域名，同时购买独立 IP 并完成备案接入:</p><ul><li>登录国内版并进入需要使用的应用</li><li>选择 <code>设置</code> &gt; <code>域名绑定</code> &gt; <code>API 访问域名</code> &gt; <code>绑定新域名</code> &gt; 输入域名 &gt; <code>确定</code>。</li><li>按照页面上的提示按要求在 DNS 上完成 CNAME 解析。</li><li>购买独立 IP 并提交工单完成备案接入。(独立 IP 目前价格为 ￥ 50&#x2F;个&#x2F;月)</li></ul><p><img src="/img/page/2023/08/20/leancloud-3.png"></p>          </div><h2 id="Vercel-部署-服务端"><a href="#Vercel-部署-服务端" class="headerlink" title="Vercel 部署 (服务端)"></a>Vercel 部署 (服务端)</h2><p align><a href="https://vercel.com/new/clone?repository-url=https%3A%2F%2Fgithub.com%2Fwalinejs%2Fwaline%2Ftree%2Fmain%2Fexample"><img src="/img/page/2023/08/20/vercel-1.svg"></a></p><ol><li>点击上方 <code>Deploy</code> 按钮，跳转至 Vercel 进行 Server 端部署。</li><li>如果你未登录的话，Vercel 会让你注册或登录，请使用 GitHub 账户进行快捷登录。</li><li>输入一个你喜欢的 Vercel 项目名称并点击 <code>Create</code> 继续:</li></ol><p><img src="/img/page/2023/08/20/vercel-2.png"></p><ol start="4"><li>此时 Vercel 会基于 Waline 模板帮助你新建并初始化仓库，仓库名为你之前输入的项目名。</li></ol><p><img src="/img/page/2023/08/20/vercel-3.png"></p><p>一两分钟后，满屏的烟花会庆祝你部署成功。此时点击 <code>Go to Dashboard</code> 可以跳转到应用的控制台。</p><p><img src="/img/page/2023/08/20/vercel-4.png"></p><ol start="5"><li>点击顶部的 <code>Settings</code> - <code>Environment Variables</code> 进入环境变量配置页，并配置三个环境变量 <code>LEAN_ID</code>, <code>LEAN_KEY</code> 和 <code>LEAN_MASTER_KEY</code> 。它们的值分别对应上一步在 LeanCloud 中获得的 <code>APP ID</code>, <code>APP KEY</code>, <code>Master Key</code>。</li></ol><p><img src="/img/page/2023/08/20/vercel-5.png"></p><div class="note note-warning">            <p>如果你使用 LeanCloud 国内版，请额外配置 <code>LEAN_SERVER</code> 环境变量，值为你绑定好的域名。</p>          </div><ol start="6"><li>环境变量配置完成之后点击顶部的 <code>Deployments</code> 点击顶部最新的一次部署右侧的 <code>Redeploy</code> 按钮进行重新部署。该步骤是为了让刚才设置的环境变量生效。</li></ol><p><img src="/img/page/2023/08/20/vercel-6.png"></p><ol start="7"><li>此时会跳转到 <code>Overview</code> 界面开始部署，等待片刻后 <code>STATUS</code> 会变成 <code>Ready</code>。此时请点击 <code>Visit</code> ，即可跳转到部署好的网站地址，此地址即为你的服务端地址。</li></ol><p><img src="/img/page/2023/08/20/vercel-7.png"></p><h2 id="从HTML引入-客户端"><a href="#从HTML引入-客户端" class="headerlink" title="从HTML引入(客户端)"></a>从HTML引入(客户端)</h2><p>在你的网页中进行如下设置:</p><ol><li>使用 CDN 引入 Waline: <code>//cdn.jsdelivr.net/npm/@waline/client</code>。</li><li>创建 <code>&lt;script&gt;</code> 标签使用 Waline() 函数初始化，并传入必要的 <code>el</code> 与 <code>serverURL</code> 选项。<ul><li><code>el</code> 选项是 Waline 渲染使用的元素，你可以设置一个字符串形式的 CSS 选择器或者一个 HTMLElement 对象。</li><li><code>serverURL</code> 是服务端的地址，即上一步获取到的值。</li></ul></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>  ..<br>  <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;//cdn.jsdelivr.net/npm/@waline/client&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  ...<br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>  ...<br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;waline&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-title class_">Waline</span>(&#123;</span><br><span class="language-javascript">      <span class="hljs-attr">el</span>: <span class="hljs-string">&#x27;#waline&#x27;</span>,</span><br><span class="language-javascript">      <span class="hljs-attr">serverURL</span>: <span class="hljs-string">&#x27;https://your-domain.vercel.app&#x27;</span>,</span><br><span class="language-javascript">    &#125;);</span><br><span class="language-javascript">  </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br></code></pre></td></tr></table></figure><ol start="3"><li>评论服务此时就会在你的网站上成功运行 🎉。</li></ol><h2 id="Fluid-主题引入-客户端"><a href="#Fluid-主题引入-客户端" class="headerlink" title="Fluid 主题引入(客户端)"></a>Fluid 主题引入(客户端)</h2><ol><li>设置主题配置文件 <code>comments -&gt; type</code> 值为 <code>waline</code></li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># 评论插件</span><br><span class="hljs-comment"># Comment plugin</span><br><span class="hljs-attr">comments:</span><br><span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br><span class="hljs-comment"># 指定的插件，需要同时设置对应插件的必要参数</span><br><span class="hljs-comment"># The specified plugin needs to set the necessary parameters at the same time</span><br><span class="hljs-comment"># Options: utterances | disqus | gitalk | valine | waline | changyan | livere | remark42 | twikoo | cusdis</span><br><span class="hljs-attr">type:</span> <span class="hljs-string">waline</span><br><br></code></pre></td></tr></table></figure><ol start="2"><li>配置 waline 相关信息</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># Waline</span><br><span class="hljs-comment"># 从 Valine 衍生而来，额外增加了服务端和多种功能</span><br><span class="hljs-comment"># Derived from Valine, with self-hosted service and new features</span><br><span class="hljs-comment"># See: https://waline.js.org/</span><br><span class="hljs-attr">waline:</span><br>  <span class="hljs-attr">serverURL:</span> <span class="hljs-string">&#x27;path-to-your-server-url&#x27;</span><br>  <span class="hljs-attr">placeholder:</span> <span class="hljs-string">遗憾莫过于难忘你的背影，却找不到你来过的痕迹</span> <span class="hljs-string">...</span><br>  <span class="hljs-attr">path:</span> <span class="hljs-string">window.location.pathname</span><br>  <span class="hljs-attr">avatar:</span> <span class="hljs-string">retro</span><br>  <span class="hljs-attr">meta:</span> [<span class="hljs-string">&#x27;nick&#x27;</span>, <span class="hljs-string">&#x27;mail&#x27;</span>, <span class="hljs-string">&#x27;link&#x27;</span>]<br>  <span class="hljs-attr">pageSize:</span> <span class="hljs-number">10</span><br>  <span class="hljs-attr">lang:</span> <span class="hljs-string">zh-CN</span><br>  <span class="hljs-attr">highlight:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">avatarCDN:</span> <span class="hljs-string">&#x27;&#x27;</span><br>  <span class="hljs-attr">avatarForce:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-attr">requiredFields:</span> []<br>  <span class="hljs-attr">emojiCDN:</span><br>  <span class="hljs-attr">emojiMaps:</span><br>  <span class="hljs-attr">anonymous:</span><br></code></pre></td></tr></table></figure><div class="note note-success">            <p>最重要的是填入之前得到的 <strong>服务端地址</strong> 到<code>serverURL</code> 中</p>          </div><h2 id="评论管理-管理端"><a href="#评论管理-管理端" class="headerlink" title="评论管理 (管理端)"></a>评论管理 (管理端)</h2><ol><li>部署完成后，请访问 <code>&lt;serverURL&gt;/ui/register</code> 进行注册。首个注册的人会被设定成管理员。</li><li>管理员登陆后，即可看到评论管理界面。在这里可以修改、标记或删除评论。</li><li>用户也通过评论框注册账号，登陆后会跳转到自己的档案页。</li></ol>]]></content>
    
    
    <categories>
      
      <category>Hexo</category>
      
      <category>Web前端</category>
      
      <category>中间件</category>
      
      <category>Waline</category>
      
      <category>Waline</category>
      
      <category>Waline</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Web前端</tag>
      
      <tag>中间件</tag>
      
      <tag>Waline</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Git连接远程GitHub配置</title>
    <link href="/2023/08/20/git-connections-to-remote-github-setting/"/>
    <url>/2023/08/20/git-connections-to-remote-github-setting/</url>
    
    <content type="html"><![CDATA[<blockquote><p>本文章主要记录Git使用期间出现访问GitHub仓库无权限的问题，成功解决后即可想仓库中推送代码。</p></blockquote><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul><li>申请GitHub账号</li><li>了解基础的Git语法</li><li>本地搭建好Git运行环境</li></ul><h2 id="建立远程仓库"><a href="#建立远程仓库" class="headerlink" title="建立远程仓库"></a>建立远程仓库</h2><p>登录到自己的GitHub之后点击右上角的+号创建仓库。</p><p><img src="/img/page/2023/08/20/createRepo.png"></p><p>输入相应信息即可。</p><h2 id="配置SSH秘钥"><a href="#配置SSH秘钥" class="headerlink" title="配置SSH秘钥"></a>配置SSH秘钥</h2><h3 id="现有问题"><a href="#现有问题" class="headerlink" title="现有问题"></a>现有问题</h3><p>当我们输入下面命令时：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">$ ssh -T git@github.com<br></code></pre></td></tr></table></figure><p>会输出下面的信息：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">git@github.com: Permission denied (publickey).<br></code></pre></td></tr></table></figure><p>说明我们没有配置秘钥，无权访问仓库。</p><h3 id="创建SSH秘钥"><a href="#创建SSH秘钥" class="headerlink" title="创建SSH秘钥"></a>创建SSH秘钥</h3><p>在shell窗口中输入下面命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">$ ssh-keygen -t rsa -C <span class="hljs-string">&quot;你的GitHub邮箱&quot;</span><br></code></pre></td></tr></table></figure><p>一直按回车即可：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs sh">Generating public/private rsa key pair.<br>Enter file <span class="hljs-keyword">in</span> <span class="hljs-built_in">which</span> to save the key (/Users/dengyang/.ssh/id_rsa): <br>Enter passphrase (empty <span class="hljs-keyword">for</span> no passphrase): <br>Enter same passphrase again: <br>Your identification has been saved <span class="hljs-keyword">in</span> /Users/dengyang/.ssh/id_rsa<br>Your public key has been saved <span class="hljs-keyword">in</span> /Users/dengyang/.ssh/id_rsa.pub<br>The key fingerprint is:<br>SHA256:47soutsMxsyEnrHNpu8FaKgRyFuFPN0lIrfOU7sQCLg 779581791@qq.com<br>The key<span class="hljs-string">&#x27;s randomart image is:</span><br><span class="hljs-string">+---[RSA 3072]----+</span><br><span class="hljs-string">|....o+....       |</span><br><span class="hljs-string">|+ .+=.o..        |</span><br><span class="hljs-string">|oo o.o .         |</span><br><span class="hljs-string">|Eo+ o o .        |</span><br><span class="hljs-string">|+=.. = .S        |</span><br><span class="hljs-string">|+** . o...       |</span><br><span class="hljs-string">|.+*+ . ..        |</span><br><span class="hljs-string">| .o+o  . .       |</span><br><span class="hljs-string">| .**o.. o.       |</span><br><span class="hljs-string">+----[SHA256]-----+</span><br></code></pre></td></tr></table></figure><p>出现上面信息即为成功。我们需要到&#x2F;Users&#x2F;dengyang&#x2F;.ssh&#x2F;id_rsa.pub这个文件中复制出秘钥。</p><h3 id="配置GitHub"><a href="#配置GitHub" class="headerlink" title="配置GitHub"></a>配置GitHub</h3><p>到用户界面的setting中，选择 SSH and GPG keys，然后选择 new SSH key，填入相应信息即可。</p><p><img src="/img/page/2023/08/20/setGitHubSSL.png"></p><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>再次输入下面命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">$ ssh -T git@github.com <br></code></pre></td></tr></table></figure><p>出现下面信息即为成功：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">Hi DY-d! You<span class="hljs-string">&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Git</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工具</tag>
      
      <tag>Git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>关于fluid主题的配置-自定义页设置篇</title>
    <link href="/2023/08/20/about-fluid-custom-setting/"/>
    <url>/2023/08/20/about-fluid-custom-setting/</url>
    
    <content type="html"><![CDATA[<blockquote><p>关于如何使用Hexo博客系统的Fluid主题，包括自定义页设置。Fluid：一款 Material Design 风格的主题。</p></blockquote><h2 id="自定义页面"><a href="#自定义页面" class="headerlink" title="自定义页面"></a>自定义页面</h2><h3 id="创建页面"><a href="#创建页面" class="headerlink" title="创建页面"></a>创建页面</h3><p>如果想单独生成一个页面，步骤和创建「关于页」类似。</p><ol><li>首先用命令行创建页面：</li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">$ hexo new page example<br></code></pre></td></tr></table></figure><ol start="2"><li>创建成功后编辑博客目录下 <code>/source/example/index.md</code>：</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">example</span><br><span class="hljs-attr">subtitle:</span> <span class="hljs-string">若不填默认是</span> <span class="hljs-string">title</span><br><span class="hljs-meta">---</span><br><span class="hljs-meta"></span><br><span class="hljs-string">这里写正文，支持</span> <span class="hljs-string">Markdown,</span> <span class="hljs-string">HTML</span><br></code></pre></td></tr></table></figure><p>正文默认没有 Markdown 样式，如果希望和文章相同的样式，可以加上：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;markdown-body&quot;</span>&gt;</span><br>正文<br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>页面的参数配置可以在**_config.fluid.yml**中统一设置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">page:</span><br>  <span class="hljs-attr">banner_img:</span> <span class="hljs-string">/img/default.png</span><br>  <span class="hljs-attr">banner_img_height:</span> <span class="hljs-number">70</span><br>  <span class="hljs-attr">banner_mask_alpha:</span> <span class="hljs-number">0.3</span><br></code></pre></td></tr></table></figure><p>也可以直接在 <a href="https://hexo.io/zh-cn/docs/front-matter"><font color='#3eaf7c'>Front-matter</font></a>里单独设置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">example</span><br><span class="hljs-attr">banner_img:</span> <span class="hljs-string">/img/default.png</span><br><span class="hljs-attr">banner_img_height:</span> <span class="hljs-number">60</span><br><span class="hljs-attr">banner_mask_alpha:</span> <span class="hljs-number">0.5</span><br><span class="hljs-meta">---</span><br><span class="hljs-meta"></span><br><span class="hljs-string">这里可以写正文</span><br></code></pre></td></tr></table></figure><h3 id="评论"><a href="#评论" class="headerlink" title="评论"></a>评论</h3><p>自定义页面也可以开启评论插件，和关于页的方式相同，通过在 <a href="https://hexo.io/zh-cn/docs/front-matter"><font color='#3eaf7c'>Front-matter</font></a>设置 <code>comment: bool</code> 来控制评论开关，或者通过 <code>comment: &#39;type&#39;</code> 来开启指定的评论插件：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">example</span><br><span class="hljs-attr">comment:</span> <span class="hljs-string">&#x27;valine&#x27;</span><br><span class="hljs-meta">---</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Hexo</category>
      
      <category>Theme</category>
      
      <category>Fluid</category>
      
    </categories>
    
    
    <tags>
      
      <tag>使用教程</tag>
      
      <tag>Hexo</tag>
      
      <tag>Fluid</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>关于fluid主题的配置-友情链接页设置篇</title>
    <link href="/2023/08/20/about-fluid-friendship-links/"/>
    <url>/2023/08/20/about-fluid-friendship-links/</url>
    
    <content type="html"><![CDATA[<blockquote><p>关于如何使用Hexo博客系统的Fluid主题，包括友情链接页设置。Fluid：一款 Material Design 风格的主题。</p></blockquote><h2 id="友情链接页"><a href="#友情链接页" class="headerlink" title="友情链接页"></a>友情链接页</h2><p>友情链接页用于展示好友的博客入口，默认关闭，开启需要先在 <code>navbar</code> 项中将 <code>links</code> 的注释(#号)删掉：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">navbar:</span><br>  <span class="hljs-attr">menu:</span><br>    <span class="hljs-bullet">-</span> &#123; <span class="hljs-attr">key:</span> <span class="hljs-string">&#x27;links&#x27;</span>, <span class="hljs-attr">link:</span> <span class="hljs-string">&#x27;/links/&#x27;</span>, <span class="hljs-attr">icon:</span> <span class="hljs-string">&#x27;iconfont icon-link-fill&#x27;</span> &#125;<br></code></pre></td></tr></table></figure><p>然后找到 <code>links</code> 的配置项，对页面内容进行配置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">links:</span><br>  <span class="hljs-attr">items:</span><br>    <span class="hljs-bullet">-</span> &#123;<br>      <span class="hljs-attr">title:</span> <span class="hljs-string">&#x27;Fluid Docs&#x27;</span>,<br>      <span class="hljs-attr">intro:</span> <span class="hljs-string">&#x27;主题使用指南&#x27;</span>,<br>      <span class="hljs-attr">link:</span> <span class="hljs-string">&#x27;https://hexo.fluid-dev.com/docs/&#x27;</span>,<br>      <span class="hljs-attr">avatar:</span> <span class="hljs-string">&#x27;/img/favicon.png&#x27;</span><br>    &#125;<br>  <span class="hljs-attr">default_avatar:</span> <span class="hljs-string">/img/avatar.png</span><br></code></pre></td></tr></table></figure><ul><li><code>title</code>: 友链站的标题</li><li><code>intro</code>: 站点或博主的简介，可省略</li><li><code>link</code>: 跳转链接</li><li><code>avatar</code>: 头像图片，可省略</li><li><code>default_avatar</code>: 成员的默认头像（仅在指定了头像并且加载失败时生效）</li></ul><p>友链页也可以使用自定义区域和评论，使用方式类似于文章页，具体见配置项与相关注释。</p>]]></content>
    
    
    <categories>
      
      <category>Hexo</category>
      
      <category>Theme</category>
      
      <category>Fluid</category>
      
    </categories>
    
    
    <tags>
      
      <tag>使用教程</tag>
      
      <tag>Hexo</tag>
      
      <tag>Fluid</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>关于fluid主题的配置-关于页设置篇</title>
    <link href="/2023/08/20/about-fluid-about-setting/"/>
    <url>/2023/08/20/about-fluid-about-setting/</url>
    
    <content type="html"><![CDATA[<blockquote><p>关于如何使用Hexo博客系统的Fluid主题，包括关于页设置。Fluid：一款 Material Design 风格的主题。</p></blockquote><h2 id="关于页"><a href="#关于页" class="headerlink" title="关于页"></a>关于页</h2><h3 id="创建关于页"><a href="#创建关于页" class="headerlink" title="创建关于页"></a>创建关于页</h3><p>首次使用主题的「关于页」需要手动创建：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">$ hexo new page about<br></code></pre></td></tr></table></figure><p>创建成功后修改 <code>/source/about/index.md</code>，添加 <code>layout</code> 属性。</p><p>修改后的文件示例如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">标题</span><br><span class="hljs-attr">layout:</span> <span class="hljs-string">about</span><br><span class="hljs-meta">---</span><br><span class="hljs-meta"></span><br><span class="hljs-string">这里可以写正文，支持</span> <span class="hljs-string">Markdown,</span> <span class="hljs-string">HTML</span><br></code></pre></td></tr></table></figure><div class="note note-warning">            <p><strong><font color='ff9933'>WARNING</font></strong></p><p><code>layout: about</code> 必须存在，并且不能修改成其他值，否则不会显示头像等样式。</p>          </div><h3 id="关于信息"><a href="#关于信息" class="headerlink" title="关于信息"></a>关于信息</h3><p>在关于页介绍自己的基础信息，可以在**_config.fluid.yml**中设置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">about:</span><br>  <span class="hljs-attr">avatar:</span> <span class="hljs-string">/img/avatar.png</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">&quot;Fluid&quot;</span><br>  <span class="hljs-attr">intro:</span> <span class="hljs-string">&quot;An elegant theme for Hexo&quot;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Hexo</category>
      
      <category>Theme</category>
      
      <category>Fluid</category>
      
    </categories>
    
    
    <tags>
      
      <tag>使用教程</tag>
      
      <tag>Hexo</tag>
      
      <tag>Fluid</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>关于fluid主题的配置-文章页设置篇</title>
    <link href="/2023/08/20/about-fluid-article-setting/"/>
    <url>/2023/08/20/about-fluid-article-setting/</url>
    
    <content type="html"><![CDATA[<blockquote><p>关于如何使用Hexo博客系统的Fluid主题，包括文章页设置。Fluid：一款 Material Design 风格的主题。</p></blockquote><h2 id="文章页"><a href="#文章页" class="headerlink" title="文章页"></a>文章页</h2><h3 id="文章在首页封面图"><a href="#文章在首页封面图" class="headerlink" title="文章在首页封面图"></a>文章在首页封面图</h3><p>对于单篇文章，在文章开头 <a href="https://hexo.io/zh-cn/docs/front-matter"><font color='#3eaf7c'>Front-matter </font> </a>中配置 <code>index_img</code> 属性。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">文章标题</span><br><span class="hljs-attr">tags:</span> [<span class="hljs-string">Hexo</span>, <span class="hljs-string">Fluid</span>]<br><span class="hljs-attr">index_img:</span> <span class="hljs-string">/img/example.jpg</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2019-10-10 10:00:00</span><br><span class="hljs-meta">---</span><br><span class="hljs-string">以下是文章内容</span><br></code></pre></td></tr></table></figure><p>和 Banner 配置相同，<code>/img/example.jpg</code> 对应的是存放在 <code>/source/img/example.jpg</code> 目录下的图片（目录也可自定义，但必须在 source 目录下）。</p><p>也可以使用外链 Url 的绝对路径。</p><p>如果想统一给文章设置一个默认图片（文章不设置 <code>index_img</code> 则默认使用这张图片），可在**_config.yml**中设置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">post:</span><br>  <span class="hljs-attr">default_index_img:</span> <span class="hljs-string">/img/example.jpg</span><br></code></pre></td></tr></table></figure><p>当 <code>default_index_img</code> 和 <code>index_img</code> 都为空时，该文章在首页将不显示图片。</p><h3 id="文章页顶部大图"><a href="#文章页顶部大图" class="headerlink" title="文章页顶部大图"></a>文章页顶部大图</h3><p>默认显示<strong>主题配置</strong>中的 <code>post.banner_img</code>，如需要设置单个文章的 Banner，在 <a href="https://hexo.io/zh-cn/docs/front-matter"><font color='#3eaf7c'>Front-matter </font> </a>中指定 <code>banner_img</code> 属性。</p><p>本地图片存放位置同上。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">文章标题</span><br><span class="hljs-attr">tags:</span> [<span class="hljs-string">Hexo</span>, <span class="hljs-string">Fluid</span>]<br><span class="hljs-attr">index_img:</span> <span class="hljs-string">/img/example.jpg</span><br><span class="hljs-attr">banner_img:</span> <span class="hljs-string">/img/post_banner.jpg</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2019-10-10 10:00:00</span><br><span class="hljs-meta">---</span><br><span class="hljs-string">以下是文章内容</span><br></code></pre></td></tr></table></figure><h3 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">code:</span><br>  <span class="hljs-attr">copy_btn:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">highlight:</span><br>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">line_number:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">lib:</span> <span class="hljs-string">&quot;highlightjs&quot;</span><br>    <span class="hljs-attr">highlightjs:</span><br>      <span class="hljs-attr">style:</span> <span class="hljs-string">&#x27;Github Gist&#x27;</span><br>      <span class="hljs-attr">bg_color:</span> <span class="hljs-literal">false</span><br>    <span class="hljs-attr">prismjs:</span><br>      <span class="hljs-attr">style:</span> <span class="hljs-string">&quot;default&quot;</span><br>      <span class="hljs-attr">preprocess:</span> <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><p><code>copy_btn</code>: 是否开启复制代码的按钮</p><p><code>line_number</code>: 是否开启行号</p><p><code>highlight</code>: 是否开启代码高亮</p><p><code>lib</code>: 选择生成高亮的库，可选项: highlightjs、prismjs，对应下面两组配置，高亮的配置说明具体见**_config.yml**中的注释</p><h3 id="评论"><a href="#评论" class="headerlink" title="评论"></a>评论</h3><p>开启评论需要在**_config.fluid.yml**中开启并指定评论模块：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">post:</span><br>  <span class="hljs-attr">comments:</span><br>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">type:</span> <span class="hljs-string">waline</span><br></code></pre></td></tr></table></figure><p>然后在下方还要设置对应评论模块的参数，比如 waline 对应设置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">waline:</span><br>  <span class="hljs-attr">serverURL:</span> <br>  <span class="hljs-attr">path:</span> <span class="hljs-string">window.location.pathname</span><br>  <span class="hljs-attr">meta:</span> [<span class="hljs-string">&#x27;nick&#x27;</span>, <span class="hljs-string">&#x27;mail&#x27;</span>, <span class="hljs-string">&#x27;link&#x27;</span>]<br>  <span class="hljs-attr">requiredMeta:</span> [<span class="hljs-string">&#x27;nick&#x27;</span>]<br>  <span class="hljs-attr">lang:</span> <span class="hljs-string">&#x27;zh-CN&#x27;</span><br>  <span class="hljs-attr">emoji:</span> [<span class="hljs-string">&#x27;https://cdn.jsdelivr.net/gh/walinejs/emojis/weibo&#x27;</span>,<span class="hljs-string">&#x27;https://unpkg.com/@waline/emojis@1.2.0/bilibili&#x27;</span>, <span class="hljs-string">&#x27;https://unpkg.com/@waline/emojis@1.2.0/tw-emoji&#x27;</span>]<br>  <span class="hljs-attr">dark:</span> <span class="hljs-string">&#x27;html[data-user-color-scheme=&quot;dark&quot;]&#x27;</span><br>  <span class="hljs-attr">wordLimit:</span> <span class="hljs-number">0</span><br>  <span class="hljs-attr">pageSize:</span> <span class="hljs-number">10</span><br>  <span class="hljs-attr">reaction:</span> <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><p>当前支持的评论插件如下：</p><ul><li><a href="https://valine.js.org/configuration.html"><font color='#3eaf7c'>Valine </font></a>:基于 LeanCloud</li><li><a href="https://waline.js.org/"><font color='#3eaf7c'>Waline </font></a>: 从 Valine 衍生而来，额外增加了服务端和多种功能</li><li><a href="https://github.com/gitalk/gitalk"><font color='#3eaf7c'>Gitalk </font></a>: 基于 GitHub Issues</li><li><a href="https://utteranc.es/"><font color='#3eaf7c'>Utterances</font></a>: 基于 GitHub Issues</li><li><a href="https://disqus.com/"><font color='#3eaf7c'>Disqus</font></a>: 基于第三方的服务</li><li><a href="http://changyan.kuaizhan.com/"><font color='#3eaf7c'>畅言</font></a>: 基于第三方的服务</li><li><a href="https://www.livere.com/"><font color='#3eaf7c'>来必力(Livere)</font></a>: 基于第三方的服务</li><li><a href="https://remark42.com/"><font color='#3eaf7c'>Remark42</font></a>: 需要自托管服务端</li><li><a href="https://twikoo.js.org/"><font color='#3eaf7c'>Twikoo</font></a>: 基于腾讯云开发</li><li><a href="https://cusdis.com/"><font color='#3eaf7c'>Cusdis</font></a>: 基于第三方服务或自托管服务</li><li><a href="https://giscus.app/zh-CN"><font color='#3eaf7c'>Giscus</font></a>: 基于 GitHub Discussion</li></ul><div class="note note-success">            <p>关于本博客使用的waline评论系统请查看另一篇博客 <a href="/2023/08/20/Waline-1-config-waline-in-blog/" title="Waline-1-在个人博客中配置Waline评论插件"><strong>Waline-1-在个人博客中配置Waline评论插件</strong></a> </p>          </div><h3 id="脚注"><a href="#脚注" class="headerlink" title="脚注"></a>脚注</h3><p>主题内置了脚注语法支持，可以在文章末尾自动生成带有锚点的脚注，该功能在**_config.fluid.yml**中默认开启：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">post:</span><br>  <span class="hljs-attr">footnote:</span><br>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">header:</span> <span class="hljs-string">&#x27;&#x27;</span><br></code></pre></td></tr></table></figure><p>脚注语法如下：</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs md">这是一句话[^1]<br>[<span class="hljs-symbol">^1</span>]: <span class="hljs-link">这是对应的脚注</span><br></code></pre></td></tr></table></figure><h3 id="Tag-插件"><a href="#Tag-插件" class="headerlink" title="Tag 插件"></a>Tag 插件</h3><h4 id="便签"><a href="#便签" class="headerlink" title="便签"></a>便签</h4><p>在 markdown 中加入如下的代码来使用便签：</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs md">&#123;% note success %&#125;<br>文字 或者 <span class="hljs-code">`markdown`</span> 均可<br>&#123;% endnote %&#125;<br></code></pre></td></tr></table></figure><p>可选标签：</p><div class="note note-success">            <p>success</p>          </div><div class="note note-primary">            <p>primary</p>          </div><div class="note note-warning">            <p>warning</p>          </div><div class="note note-secondary">            <p>secondary</p>          </div><div class="note note-danger">            <p>danger</p>          </div><div class="note note-light">            <p>light</p>          </div><div class="note note-info">            <p>info</p>          </div><div class="note note-warning">            <p><strong><font color='ff9933'>WARNING</font></strong></p><p>使用时 <code>&lt;div class=&quot;note note-primary&quot;&gt;             &lt;p&gt;&lt;code&gt;和&lt;/code&gt;&lt;/p&gt;           &lt;/div&gt;</code> 需单独一行，否则会出现问题</p>          </div>]]></content>
    
    
    <categories>
      
      <category>Hexo</category>
      
      <category>Theme</category>
      
      <category>Fluid</category>
      
    </categories>
    
    
    <tags>
      
      <tag>使用教程</tag>
      
      <tag>Hexo</tag>
      
      <tag>Fluid</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>关于fluid主题的配置-首页设置篇</title>
    <link href="/2023/08/20/about-fluid-home-setting/"/>
    <url>/2023/08/20/about-fluid-home-setting/</url>
    
    <content type="html"><![CDATA[<blockquote><p>关于如何使用Hexo博客系统的Fluid主题，包括首页设置。Fluid：一款 Material Design 风格的主题。</p></blockquote><h2 id="首页"><a href="#首页" class="headerlink" title="首页"></a>首页</h2><h3 id="打字机效果"><a href="#打字机效果" class="headerlink" title="打字机效果"></a>打字机效果</h3><p>首页大图的打字机效果可以在 <strong>_config.fluid.yml</strong>  中设置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">index:</span><br>  <span class="hljs-attr">slogan:</span><br>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">text:</span> <span class="hljs-string">这是一条</span> <span class="hljs-string">Slogan</span><br>    <span class="hljs-attr">api:</span><br>      <span class="hljs-attr">enable:</span> <span class="hljs-literal">false</span><br>      <span class="hljs-attr">url:</span> <span class="hljs-string">&quot;https://v1.hitokoto.cn/&quot;</span><br>      <span class="hljs-attr">method:</span> <span class="hljs-string">&quot;GET&quot;</span><br>      <span class="hljs-attr">headers:</span> &#123;&#125;<br>      <span class="hljs-attr">keys:</span> [<span class="hljs-string">&quot;hitokoto&quot;</span>]<br></code></pre></td></tr></table></figure><p>如果 <code>text</code> 为空，则按 <strong>_config.yml</strong> 中的 <code>subtitle</code> 显示。</p><div class="note note-warning">            <p><strong>TIP</strong></p><p>请求API的功能必须同时开启打字机效果才行。</p>          </div><h3 id="文章摘要"><a href="#文章摘要" class="headerlink" title="文章摘要"></a>文章摘要</h3><p>开关自动摘要（默认开启）：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">index:</span><br>  <span class="hljs-attr">auto_excerpt:</span><br>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><p>若要手动指定摘要，使用 <code>&lt;!-- more --&gt;</code> MD文档里划分，如：</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs md">正文的一部分作为摘要<br>&lt;!-- more --&gt;<br>余下的正文<br></code></pre></td></tr></table></figure><p>或者在 <a href="https://hexo.io/zh-cn/docs/front-matter"><font color='#3eaf7c'>Front-matter </font></a> 里面设置 <code>excerpt</code> 字段，如：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">这是标题</span><br><span class="hljs-attr">excerpt:</span> <span class="hljs-string">这是摘要</span><br><span class="hljs-meta">---</span><br></code></pre></td></tr></table></figure><div class="note note-success">            <p><strong>TIP</strong></p><p>优先级: 手动摘要 &gt; 自动摘要</p><p>如果关闭自动摘要，并且没有设置手动摘要，摘要区域空白</p><p>无论哪种摘要都最多显示 3 行，当屏幕宽度不足时会隐藏部分摘要。</p>          </div><h3 id="文章跳转方式"><a href="#文章跳转方式" class="headerlink" title="文章跳转方式"></a>文章跳转方式</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">index:</span><br><span class="hljs-attr">post_url_target:</span> <span class="hljs-string">_self</span><br></code></pre></td></tr></table></figure><p>可选值：</p><ol><li><code>_blank:</code> 新标签页打开</li><li><code>_self</code>: 当前页打开</li></ol>]]></content>
    
    
    <categories>
      
      <category>Hexo</category>
      
      <category>Theme</category>
      
      <category>Fluid</category>
      
    </categories>
    
    
    <tags>
      
      <tag>使用教程</tag>
      
      <tag>Hexo</tag>
      
      <tag>Fluid</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>关于fluid主题的配置-全局设置篇</title>
    <link href="/2023/08/20/about-fluid-global-settings/"/>
    <url>/2023/08/20/about-fluid-global-settings/</url>
    
    <content type="html"><![CDATA[<blockquote><p>关于如何使用Hexo博客系统的Fluid主题，包括全局设置。Fluid：一款 Material Design 风格的主题。</p></blockquote><h2 id="全局设置"><a href="#全局设置" class="headerlink" title="全局设置"></a>全局设置</h2><h3 id="页面顶部大图"><a href="#页面顶部大图" class="headerlink" title="页面顶部大图"></a>页面顶部大图</h3><p>每个页面都会有个 <code>banner_img</code> 属性，可以使用本地图片的相对路径，也可以使用外站链接。</p><p>图片都是放在网站文件夹下的 <code>source</code> 文件夹下，并且路径写法为：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">banner_img:</span> <span class="hljs-string">/img/bg/index.jpg</span> <span class="hljs-comment"># 对应的本地路径是 /source/img/bg/index.jpg</span><br></code></pre></td></tr></table></figure><div class="note note-warning">            <p><strong>TIP</strong></p><p>如果是本地图片，目录文件夹可自定义，但必须在 source 目录下，博客与主题的 source 目录最终会合并，因此优先选择博客的 source。</p><p>图片大小建议压缩到 1MB 以内，否则会严重拖慢页面加载</p>          </div><h3 id="博客标题"><a href="#博客标题" class="headerlink" title="博客标题"></a>博客标题</h3><p>页面左上角的博客标题，默认使用  <strong>_config.yml</strong> 中的 <code>title</code> , 并且这个配置同时控制网站标签页名称。</p><p>如需单独设置左上角的名称，可以到  <strong>_config.fluid.yml</strong>  中设置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">navbar:</span><br><span class="hljs-attr">blog_title:</span> <span class="hljs-string">博客标题</span><br></code></pre></td></tr></table></figure><h3 id="导航菜单"><a href="#导航菜单" class="headerlink" title="导航菜单"></a>导航菜单</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">navbar:</span><br>  <span class="hljs-attr">menu:</span><br>    <span class="hljs-bullet">-</span> &#123; <span class="hljs-attr">key:</span> <span class="hljs-string">&#x27;home&#x27;</span>, <span class="hljs-attr">link:</span> <span class="hljs-string">&#x27;/&#x27;</span>, <span class="hljs-attr">icon:</span> <span class="hljs-string">&#x27;iconfont icon-home-fill&#x27;</span> &#125;<br>    <span class="hljs-bullet">-</span> &#123; <span class="hljs-attr">key:</span> <span class="hljs-string">&#x27;tag&#x27;</span>, <span class="hljs-attr">link:</span> <span class="hljs-string">&#x27;/tags/&#x27;</span>, <span class="hljs-attr">icon:</span> <span class="hljs-string">&#x27;iconfont icon-tags-fill&#x27;</span> &#125;<br>    <span class="hljs-bullet">-</span> &#123; <span class="hljs-attr">key:</span> <span class="hljs-string">&#x27;about&#x27;</span>, <span class="hljs-attr">link:</span> <span class="hljs-string">&#x27;/about/&#x27;</span>, <span class="hljs-attr">icon:</span> <span class="hljs-string">&#x27;iconfont icon-user-fill&#x27;</span>, <span class="hljs-attr">name:</span> <span class="hljs-string">&#x27;联系我&#x27;</span> &#125;<br></code></pre></td></tr></table></figure><ul><li><code> key</code>：菜单名称</li><li><code>link</code>：跳转的链接</li><li><code>icon</code>：图标的css class，可以省略（即没有图标），主题内置图标访问<a href="https://hexo.fluid-dev.com/docs/icon/#%E5%86%85%E7%BD%AE%E7%A4%BE%E4%BA%A4%E5%9B%BE%E6%A0%87"><font color='#3eaf7c'>这里</font></a></li></ul><p>另外支持二级菜单（下拉菜单），配置写法如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">menu:</span><br>  <span class="hljs-bullet">-</span> &#123;<br>      <span class="hljs-attr">key:</span> <span class="hljs-string">&#x27;文档&#x27;</span>,<br>      <span class="hljs-attr">icon:</span> <span class="hljs-string">&#x27;iconfont icon-books&#x27;</span>,<br>      <span class="hljs-attr">submenu:</span> [<br>        &#123; <span class="hljs-attr">key:</span> <span class="hljs-string">&#x27;主题博客&#x27;</span>, <span class="hljs-attr">link:</span> <span class="hljs-string">&#x27;https://hexo.fluid-dev.com/&#x27;</span> &#125;,<br>        &#123; <span class="hljs-attr">key:</span> <span class="hljs-string">&#x27;配置指南&#x27;</span>, <span class="hljs-attr">link:</span> <span class="hljs-string">&#x27;https://hexo.fluid-dev.com/docs/guide/&#x27;</span> &#125;,<br>        &#123; <span class="hljs-attr">key:</span> <span class="hljs-string">&#x27;图标用法&#x27;</span>, <span class="hljs-attr">link:</span> <span class="hljs-string">&#x27;https://hexo.fluid-dev.com/docs/icon/&#x27;</span> &#125;<br>      ]<br>  &#125;<br><span class="hljs-comment">#</span><br></code></pre></td></tr></table></figure><h3 id="全局字体"><a href="#全局字体" class="headerlink" title="全局字体"></a>全局字体</h3><p>所有页面的字体统一在 <strong>_config.fluid.yml</strong>  中的配置项配置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">font:</span>         <span class="hljs-comment"># 主题字体配置</span><br>  <span class="hljs-attr">font_size:</span> <span class="hljs-string">16px</span>             <span class="hljs-comment"># 全局字号</span><br>  <span class="hljs-attr">font_family:</span> <span class="hljs-string">PingFang</span> <span class="hljs-string">SC</span>    <span class="hljs-comment"># 全局字体族</span><br>  <span class="hljs-attr">code_font_size:</span> <span class="hljs-number">85</span><span class="hljs-string">%</span>         <span class="hljs-comment"># 代码的字号</span><br></code></pre></td></tr></table></figure><p>如果想设置单独的页面，可以直接在 markdown 里通过 style 标签实现：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs html">---<br>title: example<br>---<br><br><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"></span><br><span class="language-css">  <span class="hljs-comment">/* 设置整个页面的字体 */</span></span><br><span class="language-css">  <span class="hljs-selector-tag">html</span>, <span class="hljs-selector-tag">body</span>, <span class="hljs-selector-class">.markdown-body</span> &#123;</span><br><span class="language-css">    <span class="hljs-attribute">font-family</span>: KaiTi,<span class="hljs-string">&quot;Microsoft YaHei&quot;</span>,Georgia, sans, serif;</span><br><span class="language-css">    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">15px</span>;</span><br><span class="language-css">  &#125;</span><br><span class="language-css"></span><br><span class="language-css">  <span class="hljs-comment">/* 只设置 markdown 字体 */</span></span><br><span class="language-css">  <span class="hljs-selector-class">.markdown-body</span> &#123;</span><br><span class="language-css">    <span class="hljs-attribute">font-family</span>: KaiTi,<span class="hljs-string">&quot;Microsoft YaHei&quot;</span>,Georgia, sans, serif;</span><br><span class="language-css">    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">15px</span>;</span><br><span class="language-css">  &#125;</span><br><span class="language-css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure><div class="note note-success">            <p>更详细的配置请访问：<a href="https://hexo.fluid-dev.com/docs/guide/">https://hexo.fluid-dev.com/docs/guide/</a></p>          </div>]]></content>
    
    
    <categories>
      
      <category>Hexo</category>
      
      <category>Theme</category>
      
      <category>Fluid</category>
      
    </categories>
    
    
    <tags>
      
      <tag>使用教程</tag>
      
      <tag>Hexo</tag>
      
      <tag>Fluid</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo-2-hexo的基本命令</title>
    <link href="/2023/08/19/Hexo-2-Basic-commands-of-hexo/"/>
    <url>/2023/08/19/Hexo-2-Basic-commands-of-hexo/</url>
    
    <content type="html"><![CDATA[<blockquote><p>主要叙述如何使用Hexo的命令来生成文章、建站、生成静态文件、本地预览、发布等。</p></blockquote><h2 id="基本命令"><a href="#基本命令" class="headerlink" title="基本命令"></a>基本命令</h2><h3 id="init"><a href="#init" class="headerlink" title="init"></a>init</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">$ <span class="hljs-built_in">mkdir</span> myblog<br>$ <span class="hljs-built_in">cd</span> myblog<br>$ npx hexo init<br></code></pre></td></tr></table></figure><p>新建一个网站。</p><h3 id="new"><a href="#new" class="headerlink" title="new"></a>new</h3><p>改命令主要用于新建一篇文章，生成关于页以及自定义页面。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sh">$ npx hexo new <span class="hljs-string">&quot;文章标题&quot;</span> <span class="hljs-comment"># 生成文章</span><br>-------------------------------<br>$ hexo new page about <span class="hljs-comment"># 生成关于页</span><br>-------------------------------<br>$ hexo new page example <span class="hljs-comment"># 生成自定义页面</span><br></code></pre></td></tr></table></figure><h2 id="generate"><a href="#generate" class="headerlink" title="generate"></a>generate</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">$ hexo generate<br></code></pre></td></tr></table></figure><p>生成静态文件。</p><h2 id="server"><a href="#server" class="headerlink" title="server"></a>server</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">$ hexo server<br></code></pre></td></tr></table></figure><p>启动服务器。默认情况下，访问网址为： <code>http://localhost:4000/</code>。</p><h2 id="clean"><a href="#clean" class="headerlink" title="clean"></a>clean</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">$ hexo clean<br></code></pre></td></tr></table></figure><p>清除缓存文件 (<code>db.json</code>) 和已生成的静态文件 (<code>public</code>)。</p><p>在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。</p><h2 id="deploy"><a href="#deploy" class="headerlink" title="deploy"></a>deploy</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">$ hexo deploy<br></code></pre></td></tr></table></figure><p>部署网站。</p>]]></content>
    
    
    <categories>
      
      <category>Hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>使用教程</tag>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo-1-搭建博客系统</title>
    <link href="/2023/08/17/Hexo-1-create-blog-system/"/>
    <url>/2023/08/17/Hexo-1-create-blog-system/</url>
    
    <content type="html"><![CDATA[<blockquote><p>建立个人博客的需求由来已久，能拥有自己的技术博客是广大程序员的梦想。相比于早些时候的WordPress、织梦等框架，就个人站点来说，用Hexo搭建博客可以用“怎一个爽字了得”形容。Hexo基于Node.js开发，具有轻量、方便、易部署等特点，主题丰富简约，依赖github即可构建站点，近些年受到广泛关注。此篇文章旨在和与我一样的初学者分享经验，有疑问欢迎在评论区交流。</p></blockquote><h2 id="前置条件"><a href="#前置条件" class="headerlink" title="前置条件"></a>前置条件</h2><ul><li><code>github账号</code>：需要申请一个属于你的github账号，可以在<a href="https://github.com/"><font color='#3eaf7c'>这里申请</font></a>。</li><li><code>git bash</code>： 需要有git bash运行环境，相关安装和使用教程请询问度娘。</li><li><code>Node.js</code>： 必须安装 Node.js 开发环境，建议参考<a href=""><font color='#3eaf7c'>node.js 安装</font></a></li></ul><h2 id="Hexo的安装，初始化和本地预览"><a href="#Hexo的安装，初始化和本地预览" class="headerlink" title="Hexo的安装，初始化和本地预览"></a>Hexo的安装，初始化和本地预览</h2><h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><p>在shell命令窗口输入下面命令</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">$ <span class="hljs-built_in">mkdir</span> my_hexo<br>$ <span class="hljs-built_in">cd</span> my_hexo<br>$ npm install hexo<br></code></pre></td></tr></table></figure><p>或者下面全局安装</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">$ npm install -g hexo-cli<br></code></pre></td></tr></table></figure><h3 id="建站"><a href="#建站" class="headerlink" title="建站"></a>建站</h3><p>创建一个文件夹，并且输入建站命令，如下：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sh">$ <span class="hljs-built_in">mkdir</span> myBlog<br>$ <span class="hljs-built_in">cd</span> myBlog<br>$ npx hexo init<br></code></pre></td></tr></table></figure><p>新建完成后，指定文件夹的目录如下：</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs 1c">.<br>├── _config.yml<br>├── package.json<br>├── scaffolds<br>├── source<br><span class="hljs-string">|   ├── _drafts</span><br><span class="hljs-string">|   └── _posts</span><br>└── themes<br></code></pre></td></tr></table></figure><ul><li><code>_config.yml</code>：站点配置文件。</li><li><code>source</code>：生成的文章在该文件下的 <code>_post</code> 文件夹中。个人博客网站的图片都存在改文件夹下。</li></ul><h3 id="本地预览"><a href="#本地预览" class="headerlink" title="本地预览"></a>本地预览</h3><p>为了查看本地站点的实际效果，可以输入下面命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">$ npx hexo server<br></code></pre></td></tr></table></figure><p>会在本地搭建服务器挂载生成的本地站点，通过访问 <a href="http://localhost:4000/">http://localhost:4000</a> 浏览自己的网站。</p><h2 id="Hexo部署到GitHub"><a href="#Hexo部署到GitHub" class="headerlink" title="Hexo部署到GitHub"></a>Hexo部署到GitHub</h2><h3 id="创建GitHub仓库"><a href="#创建GitHub仓库" class="headerlink" title="创建GitHub仓库"></a>创建GitHub仓库</h3><p>仓库名必须为：&lt;Github 账号&gt;.github.io</p><h3 id="安装-hexo-deployer-git"><a href="#安装-hexo-deployer-git" class="headerlink" title="安装 hexo-deployer-git"></a>安装 <strong>hexo-deployer-git</strong></h3><p>注意进入到<strong>博客网站的文件下</strong>输入下面命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">$ npm install hexo-deployer-git --save<br></code></pre></td></tr></table></figure><h3 id="修改-config-yml"><a href="#修改-config-yml" class="headerlink" title="修改_config.yml"></a>修改_config.yml</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br>  <span class="hljs-attr">repo:</span> <span class="hljs-string">&lt;repository</span> <span class="hljs-string">url&gt;</span> <span class="hljs-comment">#使用SSH，不适用HTTPS的，例如git@github.com:youName/youName.github.io.git</span><br>  <span class="hljs-attr">branch:</span> [<span class="hljs-string">branch</span>]<br>  <span class="hljs-attr">message:</span> [<span class="hljs-string">message</span>]<br>  <br><span class="hljs-string">----------------------------</span><br><span class="hljs-comment"># URL</span><br><span class="hljs-comment">## If your site is put in a subdirectory, set url as &#x27;http://yoursite.com/child&#x27; and root as &#x27;/child/&#x27;</span><br><span class="hljs-attr">url:</span> <span class="hljs-string">https:&lt;Github账号&gt;.github.io</span><br><span class="hljs-attr">root:</span> <span class="hljs-string">/</span><br></code></pre></td></tr></table></figure><h3 id="推送到GitHub"><a href="#推送到GitHub" class="headerlink" title="推送到GitHub"></a>推送到GitHub</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">$ npx hexo g<br>$ npx hexo d<br></code></pre></td></tr></table></figure><p>当出现下面显示语句即为成功：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">INFO  Deploy <span class="hljs-keyword">done</span>: git<br></code></pre></td></tr></table></figure><p>访问的域名为：<code>https://&lt;Github账号&gt;.github.io</code>。</p><div class="note note-warning">            <p>如果出现下面访问git失败的情况，请看 <a href="/2023/08/20/git-connections-to-remote-github-setting/" title="Git连接远程GitHub配置"><strong>Git 连接远程 GitHub 配置</strong></a></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs sh">fatal: 无法读取远程仓库。<br><br>请确认您有正确的访问权限并且仓库存在。<br>FATAL Something<span class="hljs-string">&#x27;s wrong. Maybe you can find the solution here: https://hexo.io/docs/troubleshooting.html</span><br><span class="hljs-string">Error: Spawn failed</span><br><span class="hljs-string">    at ChildProcess.&lt;anonymous&gt; (/Users/dengyang/Desktop/未命名文件夹 2/myblog/node_modules/hexo-util/lib/spawn.js:51:21)</span><br><span class="hljs-string">    at ChildProcess.emit (node:events:513:28)</span><br><span class="hljs-string">    at ChildProcess._handle.onexit (node:internal/child_process:291:12)</span><br></code></pre></td></tr></table></figure>          </div>]]></content>
    
    
    <categories>
      
      <category>Hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>使用教程</tag>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
